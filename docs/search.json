[
  {
    "objectID": "website/people.html",
    "href": "website/people.html",
    "title": "VegVault Team",
    "section": "",
    "text": "Meet the team behind VegVault - researchers dedicated to advancing vegetation ecology through integrated data science.\n\n\n\n\nAssistant Professor for Plant Ecology\n\nüè¶ Department of Botany, Faculty of Science, Charles University, Prague, Czech Republic\nüì¨ Email: ondrej.mottl(at)gmail.com\n\n\n\n\n\n\n\n\n\nResearch Group Leader\n\nüè¶ University of Bergen, Norway\nüì¨ Email: suzette.flantua(at)uib.no\n\n\n\n\n\n\nPhD Student in Quantitative Ecology\n\nüè¶ University of Bayreuth, Bayreuth, Germany\nüì¨ Email: franka.gaiser(at)uni-bayreuth.de\n\n\n\n\n\n\nResearch Group Leader\n\nüè¶ Charles University, Czech Republic\nüì¨ Email: simova(at)cts.cuni.cz\n\n\n\n\n\n\n\nVegVault is part of the BIODYNAMICS project, which aims to understand biodiversity dynamics under changing climatic conditions.\n\n\n\nWe thank the global community of data contributors, including:\n\nNeotoma Paleoecology Database contributors\nsPlotOpen consortium members\nBIEN database contributors\n\nTRY Plant Trait Database contributors\nCHELSA and WoSIS data providers\n\n\n\n\nInterested in contributing to VegVault? See our Contributing Guide for information on:\n\nData contributions\nCode contributions\nCommunity involvement\n\n\n\n\n\nGeneral inquiries: GitHub Discussions\nTechnical issues: GitHub Issues\nDetailed contact information: Contact & Support"
  },
  {
    "objectID": "website/people.html#main-developer",
    "href": "website/people.html#main-developer",
    "title": "VegVault Team",
    "section": "",
    "text": "Assistant Professor for Plant Ecology\n\nüè¶ Department of Botany, Faculty of Science, Charles University, Prague, Czech Republic\nüì¨ Email: ondrej.mottl(at)gmail.com"
  },
  {
    "objectID": "website/people.html#core-collaborators",
    "href": "website/people.html#core-collaborators",
    "title": "VegVault Team",
    "section": "",
    "text": "Research Group Leader\n\nüè¶ University of Bergen, Norway\nüì¨ Email: suzette.flantua(at)uib.no\n\n\n\n\n\n\nPhD Student in Quantitative Ecology\n\nüè¶ University of Bayreuth, Bayreuth, Germany\nüì¨ Email: franka.gaiser(at)uni-bayreuth.de\n\n\n\n\n\n\nResearch Group Leader\n\nüè¶ Charles University, Czech Republic\nüì¨ Email: simova(at)cts.cuni.cz"
  },
  {
    "objectID": "website/people.html#project-affiliation",
    "href": "website/people.html#project-affiliation",
    "title": "VegVault Team",
    "section": "",
    "text": "VegVault is part of the BIODYNAMICS project, which aims to understand biodiversity dynamics under changing climatic conditions."
  },
  {
    "objectID": "website/people.html#acknowledgments",
    "href": "website/people.html#acknowledgments",
    "title": "VegVault Team",
    "section": "",
    "text": "We thank the global community of data contributors, including:\n\nNeotoma Paleoecology Database contributors\nsPlotOpen consortium members\nBIEN database contributors\n\nTRY Plant Trait Database contributors\nCHELSA and WoSIS data providers"
  },
  {
    "objectID": "website/people.html#get-involved",
    "href": "website/people.html#get-involved",
    "title": "VegVault Team",
    "section": "",
    "text": "Interested in contributing to VegVault? See our Contributing Guide for information on:\n\nData contributions\nCode contributions\nCommunity involvement"
  },
  {
    "objectID": "website/people.html#contact-us",
    "href": "website/people.html#contact-us",
    "title": "VegVault Team",
    "section": "",
    "text": "General inquiries: GitHub Discussions\nTechnical issues: GitHub Issues\nDetailed contact information: Contact & Support"
  },
  {
    "objectID": "website/database_structure.html",
    "href": "website/database_structure.html",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "Currently, VegVault consists of 31 interconnected tables with 87 fields (variables), which are described in detail below. However, the internal database structure may not be directly relevant to most users, as the {vaultkeepr} R package processes all data to output only the most relevant information in a ‚Äúready-to-analyze‚Äù format.\n\n[!NOTE]\nFor Most Users: If you‚Äôre primarily interested in using VegVault for research, you may want to start with our Usage Examples rather than diving into the technical database structure.\n\nThis section provides comprehensive documentation of all tables and their relationships for users who need detailed technical information about the database architecture.\n\n\nSeveral tables contain metadata and administrative information that are not directly linked to the scientific data:\n\nAuthors: Information about VegVault authors and maintainers, including contact details\nversion_control: Database version information with descriptions of changes over time\n\nsqlite_stat1 & sqlite_stat4: SQLite system tables containing database index statistics for query optimization\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nauthor_id\nINTEGER\nID of an Author (unique)\n\n\nauthor_fullname\nTEXT\nFull name of an Author\n\n\nauthor_email\nTEXT\nContact email of an Author\n\n\nauthor_orcid\nTEXT\nORCID ID of an Author\n\n\n\nColumn names and types for table Authors.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nid\nINTEGER\nID of a database version (unique)\n\n\nversion\nTEXT\nVersion number\n\n\nupdate_date\nTEXT\nDate of the creation of that version\n\n\nchangelog\nTEXT\nText description of main changes in the database\n\n\n\nColumn names and types for table version_control.\n\n\n\n\n\nThe Datasets table represents the main organizational structure in VegVault, serving as the keystone for managing and organizing all data. Each Dataset contains one row with a unique Dataset ID (dataset_id), Dataset name (dataset_name), geographic location (coord_lat, coord_long), Dataset Type (dataset_type_id), Dataset Source (data_source_id), Dataset Source Type (dataset_source_type_id), and Sampling Method (sampling_method_id).\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset (unique)\n\n\ndataset_name\nTEXT\nName of each Dataset\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source\n\n\ndataset_type_id\nINTEGER\nID of a Dataset Type\n\n\ndata_source_type_id\nINTEGER\nID of a Dataset Source-Type\n\n\ncoord_long\nREAL\nGeographical coordinates - longitude\n\n\ncoord_lat\nREAL\nGeographical coordinates - latitude\n\n\nsampling_method_id\nINTEGER\nID of a Sampling Method\n\n\n\nColumn names and types for table Datasets.\n\n\n\nThe Dataset Type defines the most basic classification of each Dataset, ensuring that the vast amount of data is categorized systematically. Currently, VegVault contains the following types of Datasets:\n\nvegetation_plot: This type includes contemporary vegetation plot data, capturing contemporary vegetation characteristics and distributions.\nfossil_pollen_archive: This type encompasses past vegetation plot data derived from fossil pollen records, providing insights into past vegetation and climate dynamics.\ntraits: This type contains functional trait data, detailing specific characteristics of plant species that influence their ecological roles.\ngridpoints: This type holds artificially created Datasets to manage abiotic data, here climate and soil information (a dataset type created to hold abiotic data, see details in the Methods section).\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_type_id\nINTEGER\nID of a Dataset Type (unique)\n\n\ndataset_type\nTEXT\nText description of individual Dataset Types (currently vegetation_plot, fossil_pollen_archive, traits, gridpoints)\n\n\n\nColumn names and types for table DatasetTypeID.\n\n\n\n\n\nVegVault maintains detailed information about the primary data source, thereby enhancing the findability and referencing of primary data sources. Each Dataset is derived from a specific Source-Type that provides detailed information on the source used to retrieve the original data. The current Source-Types in VegVault include:\n\nBIEN - Botanical Information and Ecology Network\nsPlotOpen - The open-access version of sPlot\nTRY - TRY Plant Trait Database\nNeotoma-FOSSILPOL - The workflow that aims to process and standardise global palaeoecological pollen data. Note that we specifically state Neotoma-FOSSILPOL and not just Neotoma, as FOSSILPOL not only provides the data acquisition but also alters it (e.g., creating new age-depth models). It also addresses major challenges in paleoecological data integration, such as age uncertainty, by incorporating probabilistic age-depth models and their associated uncertainty matrices. This enables the propagation of temporal uncertainty in subsequent analyses, a critical advancement for robust macroecological studies, previously flagged as a major issue with paleo-data.\ngridpoints - artificially created Datasets to hold abiotic data\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_type_id\nINTEGER\nID of a Dataset Source-Type (unique)\n\n\ndataset_source_type\nTEXT\nText description of individual Dataset Source-Type (currently, BEIN, sPlotOpen, TRY, Neotoma-FOSSILPOL, gridpoints)\n\n\n\nColumn names and types for table DatasetSourceTypeID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_type_id\nINTEGER\nNA\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\ndata_source_id\nNA\nID of a Dataset Source\n\n\n\nColumn names and types for table DatasetSourceTypeReference.\n\n\n\n\n\nEach individual Dataset from a specific Dataset Source-Type can have information on the source of the data (i.e.¬†sub-database). VegVault v1.0.0 currently includes 706 sources of Datasets, where each dataset can also have one or more direct references to specific data, ensuring that users can accurately cite and verify the sources of their data. This should help to promote better findability of the primary source of data and referencing.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source (unique)\n\n\ndata_source_desc\nTEXT\nText description of individual Dataset Sources (e.g., name of the sub-database from the primary source)\n\n\n\nColumn names and types for table DatasetSourcesID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table DatasetSourcesReference.\n\nCurrently, there are 691 sources of datasets.\n\n\n\n\nSampling methods vary significantly across the different types of Datasets integrated into VegVault, reflecting the diverse nature of the data collected. Such information is crucial for understanding the context and limitations of each Dataset Type. For contemporary vegetation plots, sampling involves standardised plot inventories and surveys that capture detailed vegetation characteristics across various regions. Fossil pollen data are collected from sediment records from numerous different depositional environments representing past vegetation and climate dynamics. Therefore, information on sampling methods is only available for both vegetation_plot and fossil_pollen_archive Datasets, providing metadata that ensures accurate and contextually relevant analyses.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsampling_method_id\nINTEGER\nID of a Dataset Sampling Method (unique)\n\n\nsampling_method_details\nTEXT\nText description of individual Dataset Sampling Methods\n\n\n\nColumn names and types for table SamplingMethodID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsampling_method_id\nINTEGER\nID of a Dataset Sampling Method\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table SamplingMethodReference.\n\n\n\n\n\nTo support robust and transparent scientific research, each Dataset in VegVault can have multiple references at different levels. The Dataset Source-Type, Dataset Source, and Sampling Method can all have their own references, providing detailed provenance and citation information. This multi-level referencing system enhances the traceability and validation of the data. Each dataset can also have one or more direct references to specific data, further ensuring that users can accurately cite and verify the sources of their data.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table DatasetReferences.\n\nThis means that one dataset can have one/several references from each of those parts. Let‚Äôs take a look at an example of what that could mean in practice.\nWe have selected dataset ID: 91256, which is a fossil pollen archive. Therefore, it has the reference of the Dataset Source-Type:\n\nFlantua, S. G. A., Mottl, O., Felde, V. A., Bhatta, K. P., Birks, H. H., Grytnes, J.-A., Seddon, A. W. R., & Birks, H. J. B. (2023). A guide to the processing and standardization of global palaeoecological data for large-scale syntheses using fossil pollen. Global Ecology and Biogeography, 32, 1377‚Äì1394. https://doi.org/10.1111/geb.13693\n\nand reference for the individual dataset:\n\nGrimm, E.C., 2008. Neotoma: an ecosystem database for the Pliocene, Pleistocene, and Holocene. Illinois State Museum Scientific Papers E Series, 1.\n\n\n\n\n\n\nSamples represent the main unit of data in VegVault, serving as the fundamental building blocks for all analyses. There are currently over 13 million Samples in VegVault v1.0.0 (of which ~ 1.6 million are gridpoints of abiotic data, see Database Assembly).\nVegVault encompasses both contemporary and paleo data, necessitating accurate age information for each Sample. Contemporary Samples are assigned an age of 0, while Samples from fossil pollen records are in calibrated years before the present (cal yr BP). The ‚Äúpresent‚Äù is here specified as 1950 AD.\n\n\nThe table contains one Sample per row, with each Sample containing: a unique Sample ID (sample_id), Sample name (sample_name), temporal information about Sample (age), sample site (size of the plot if available; sample_size_id), and additional information about sample (sample_details; this is currently not being used in v1.0.0.). As VegVault encompasses both contemporary and paleo-data, accurate age information is required for each Sample.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample (unique)\n\n\nsample_name\nTEXT\nName of a Sample\n\n\nsample_details\nTEXT\nSpecific description of a Sample. Currently not being used.\n\n\nage\nREAL\nAge of sample. Mainly used for fossil_pollen_archives, where note the age of a Sample in calibrated years before present. Note that all contemporary Samples, have age of 0.\n\n\nsample_size_id\nINTEGER\nID of a Sample Size\n\n\n\nColumn names and types for table Samples.\n\n\n\n\nEach Sample is linked to a specific Dataset via the DatasetSample table, which ensures that every Sample is correctly associated with its corresponding Dataset Type (whether it is vegetation_plot, fossil_pollen_archive, traits, or gridpoint) and other Dataset properties (e.g., geographic location). One Dataset contains several Samples only in a case where they differ in time (age).\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\n\nColumn names and types for table DatasetSample.\n\n\n\n\nThe size of vegetation plots can vary substantially. This detail is crucial for ecological studies where plot size can influence species diversity and abundance metrics, thus impacting follow-up analyses and interpretations. To account for this variability, information about the plot size is recorded separately for each contemporary Sample.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_size_id\nINTEGER\nID of a size category (unique)\n\n\nsample_size\nREAL\nNumeric expression of size\n\n\ndescription\nTEXT\nMostly description of units in which the values are stored\n\n\n\nColumn names and types for table SampleSizeID.\n\n\n\n\n\nEach Sample from the fossil_pollen_archive Dataset is also associated with an uncertainty matrix generated during the re-estimation of ages using FOSSILPOL workflow. This matrix provides a range of potential ages derived from age-depth modelling, reflecting the inherent uncertainty in dating paleoecological records.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\niteration\nINTEGER\nID of a iteration from age depth model. Currently, the is 1000 iteration per each Sample.\n\n\nage\nINTEGER\nPotential age of a Sample\n\n\n\nColumn names and types for table SampleUncertainty.\n\nWe can show this on the previously selected fossil pollen archive with dataset ID: 91256.\n\n\n\n\nEach Sample in VegVault can have specific References in addition to those at the Dataset-level. These individual Sample References provide detailed provenance and citation information, ensuring that users can trace the origin and validation of each data point. Note that a single Sample can have several References. This level of referencing enhances the transparency and reliability of the data, especially when the dataset continues to be updated in the future.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table SampleReference.\n\n\n\n\n\n\n\nThe VegVault database records the original taxonomic names derived directly from the primary data sources, and currently, it holds over 100 thousand taxonomic names.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon (unique)\n\n\ntaxon_name\nTEXT\nName of a Taxon from primary source.\n\n\n\nColumn names and types for table Taxa.\n\n\n\n\nEach individual Taxon is linked to corresponding Samples through the SampleTaxa table, ensuring accurate and systematic association between species and their ecological data. Note that the abundance information varies across the primary data sources. Therefore, users have to be careful while processing data from various sources.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\nvalue\nREAL\nAbundance representation of a Taxon (the units may differ among primary sources, i.e.¬†Dataset Source-Types)\n\n\n\nColumn names and types for table SampleTaxa.\n\n\n\n\n\nEach taxonomic name undergoes an automated classification (see Database Assembly) and results are stored in the TaxonClassification table. To classify the diverse taxa present in the VegVault database, the {taxospace} R package was used. This tool automatically aligns taxa names with the Taxonomy Backbone from the Global Biodiversity Information Facility, providing a standardized classification framework. Specifically, we try to find the best match of the raw names of taxa using Global Names Resolver.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\ntaxon_species\nINTEGER\nID of a Taxon, which was assign as species level\n\n\ntaxon_genus\nINTEGER\nID of a Taxon, which was assign as genus level\n\n\ntaxon_family\nINTEGER\nID of a Taxon, which was assign as family level\n\n\n\nColumn names and types for table TaxonClassification.\n\nTaxonomic classification for some Taxa might be only available down to the genus or family level, while most of the data is classified to species level. Classification information, detailed up to the family level, is stored for each taxon, ensuring consistency and facilitating comparative analyses across different datasets. Currently, the VegVault database holds over 110 thousand taxonomic names, of which we were unable to classify only 1312 (1.2%).\n\n\n\n\nEach taxon might get a reference. Currently, this is used to track the origin of the Taxon name (i.e.¬†which primary source was used first with this Taxon). Note that Taxa, generated from taxonomic classification are associated with ‚Äútaxospace‚Äù reference.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table TaxonReference.\n\n\n\n\n\n\nThe Traits table contains the list of functional traits currently contained in VegVault. The table contains one Trait per row, with each Trait containing: a unique Trait ID (trait_id), original Trait name from primary source (trait_name), and Trait Domain (trait_domain_id). Functional traits of vegetation taxa follow the same structure of Dataset and Samples obtained directly from Dataset Source-Types.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait (unique)\n\n\ntrait_domain_id\nINTEGER\nID of a Trait Domain\n\n\ntrait_name\nTEXT\nName of the trait from the primary source. See ‚ÄòVegVault Content‚Äô for the details about the specific columns used from primary sources.\n\n\n\nColumn names and types for table Traits.\n\n\n\n\nTraits are grouped into Trait Domains to allow for easier aggregation of Traits across data sources. As there are differences in trait names across sources of data and individual Datasets, the VegVault database contains Trait Domain information to group traits together. In total, six Trait Domains are present: Stem specific density, Leaf nitrogen content per unit mass, Diaspore mass, Plant height, Leaf area, Leaf mass per area, following Diaz et al.¬†(2016). Yet, it is up to the user to decide how to further aggregate trait values if multiple trait Samples of one Trait Domain are available for the same environmental or taxonomic entity.\n\n\n\n\n\n\n\n\nTrait domain\nTrait\nData Source\n\n\n\n\nStem specific density\nstem wood density\nBIEN\n\n\nStem specific density\nStem specific density (SSD, stem dry mass per stem fresh volume) or wood density\nTRY\n\n\nLeaf nitrogen content per unit mass\nleaf nitrogen content per leaf dry mass\nBIEN\n\n\nLeaf nitrogen content per unit mass\nLeaf nitrogen (N) content per leaf dry mass\nTRY\n\n\nDiaspore mass\nseed mass\nBIEN\n\n\nDiaspore mass\nSeed dry mass\nTRY\n\n\nPlant heigh\nwhole plant height\nBIEN\n\n\nPlant heigh\nPlant height vegetative\nTRY\n\n\nLeaf Area\nleaf area\nBIEN\n\n\nLeaf Area\nLeaf area (in case of compound leaves undefined if leaf or leaflet, undefined if petiole is in- or exluded)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, petiole excluded)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, petiole included)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, undefined if petiole in- or excluded)\nTRY\n\n\nLeaf mass per area\nleaf mass per area\nBIEN\n\n\nLeaf mass per area\nLeaf area per leaf dry mass (specific leaf area, SLA or 1/LMA): petiole included\nTRY\n\n\nLeaf mass per area\nLeaf area per leaf dry mass (specific leaf area, SLA or 1/LMA): undefined if petiole is in- or excluded)\nTRY\n\n\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_domain_id\nINTEGER\nID of a Trait Domain (unique)\n\n\ntrait_domain_name\nTEXT\nName of the Trait Domain from Diaz et al.¬†(2016)\n\n\ntrait_domanin_description\nTEXT\nNA\n\n\ntrait_domain_description\nNA\nAdditional information about the Trait Domain\n\n\n\nColumn names and types for table TraitsDomain.\n\n\n\n\n\nIn general, data of functional traits of vegetation taxa follow the same structure of the Dataset and Samples obtained directly from the Dataset Source-Types. Therefore, TraitsValue table contains not only the actual measured value of Trait observation but also information about linking information across Datasets, Samples, and Taxa. This comprehensive linkage ensures that each Trait value is accurately associated with its relevant ecological, environmental and taxonomic context.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\ntrait_value\nREAL\nValue of specific measured observation of Trait.\n\n\n\nColumn names and types for table TraitsValue.\n\n\n\n\nTo ensure clarity and reproducibility, each Trait in VegVault can have additional References beyond the general Dataset and Sample References. These Trait-specific References provide detailed provenance and citation information, supporting rigorous scientific research and enabling users to trace the origins and validation of each trait value.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table TraitsReference.\n\n\n\n\n\nThe abiotic data in the VegVault database provide essential information on environmental factors affecting vegetation distribution and traits. Currently, VegVault includes abiotic data from CHELSA, CHELSA-TRACE21, and WoSIS. CHELSA and CHELSA-TRACE21 provide high-resolution climate data, while WoSIS offers detailed soil information.\n\n\nAs VegVault contains abiotic variables from several primary sources, the AbioticVariable table contains descriptions of abiotic variables (abiotic_variable_name), their units (abiotic_variable_unit), and measurement details (measure_details). These data include variables such as climate and soil conditions, which are crucial for understanding the ecological contexts of vegetation dynamics.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nabiotic_variable_id\nINTEGER\nID of a Abiotic Variable\n\n\nabiotic_variable_name\nTEXT\nName of a Abiotic Variable from primary source\n\n\nabiotic_variable_unit\nTEXT\nUnit of a Abiotic Variable\n\n\nmeasure_details\nTEXT\nAdditional details about Abiotic Variable\n\n\nabiotic_variable_scale\nNA\nScale of a Abiotic Variable\n\n\n\nColumn names and types for table AbioticVariable.\n\n\n\n\n\n\n\n\nVariable name\nVariable unit\nSource of data\n\n\n\n\nbio1\nC (degree Celsius)\nmean annual air temperature\n\n\nbio4\nC (degree Celsius)\ntemperature seasonality\n\n\nbio6\nC (degree Celsius)\nmean daily minimum air temperature of the coldest month\n\n\nbio12\nkg m-2 year-1\nannual precipitation amount\n\n\nbio15\nUnitless\nprecipitation seasonality\n\n\nbio18\nkg m-2 quarter-1\nmean monthly precipitation amount of the warmest quarter\n\n\nbio19\nkg m-2 quarter-1\nmean monthly precipitation amount of the coldest quarter\n\n\nHWSD2\nUnitless\nSoilGrids-soil_class\n\n\n\n\n\n\nThe AbioticData table holds the actual values of abiotic variables (the units are the same for each AbioticVariable).\n\n\n\n\nGridpoints are stored in artificially created Datasets and Samples, with one Dataset holding more Samples only if they differ in age. We have estimated the spatial and temporal distance between each gridpoint and other non-gridpoint Samples (vegetation_plot, fossil_pollen_archive, and traits). We store the link between gridpoint and non-gridpoint Samples as well as the spatial and temporal distance. As this results in very large amounts of data, we have discarded any gridpoint Sample, which is not close to 50 km and/or 5000 years to any other non-gridpoint Samples as not relevant for the vegetation dynamics.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of non-gridpoint Sample\n\n\nsample_ref_id\nINTEGER\nID of gridpoint Sample\n\n\ndistance_in_km\nINTEGER\nDistance among samples expressed in kilometres\n\n\ndistance_in_years\nINTEGER\nDistance among samples expressed in years\n\n\n\nColumn names and types for table AbioticDataReference.\nSuch data structure allows that environmental context is readily available for each vegetation and trait Sample. For each non-gridpoint Sample, users can select the closest spatio-temporally abiotic data or get average from all surrounding gridpoints.\n\n\n\n\n\nEach Abiotic Variable can have a separate Reference, in addition to a Dataset and Sample.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nabiotic_variable_id\nINTEGER\nID of an Abiotic Variable\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table AbioticVariableReference.\n\n\n\n\nThe References table is a central component that serves all sections of the VegVault database. This table contains all References, independent of the source of the reference and the type of data. Each row contains a single Reference, which is then linked to the type of data which is being referenced. This allows a single Reference to be used across data types, but also one data point having many different references.\nMoreover, most primary sources of the data have a license, which requires correct attribution. Therefore, each Reference has information if such a Reference needs to be cited while using the specific data."
  },
  {
    "objectID": "website/database_structure.html#metadata-tables",
    "href": "website/database_structure.html#metadata-tables",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "Several tables contain metadata and administrative information that are not directly linked to the scientific data:\n\nAuthors: Information about VegVault authors and maintainers, including contact details\nversion_control: Database version information with descriptions of changes over time\n\nsqlite_stat1 & sqlite_stat4: SQLite system tables containing database index statistics for query optimization\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nauthor_id\nINTEGER\nID of an Author (unique)\n\n\nauthor_fullname\nTEXT\nFull name of an Author\n\n\nauthor_email\nTEXT\nContact email of an Author\n\n\nauthor_orcid\nTEXT\nORCID ID of an Author\n\n\n\nColumn names and types for table Authors.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nid\nINTEGER\nID of a database version (unique)\n\n\nversion\nTEXT\nVersion number\n\n\nupdate_date\nTEXT\nDate of the creation of that version\n\n\nchangelog\nTEXT\nText description of main changes in the database\n\n\n\nColumn names and types for table version_control."
  },
  {
    "objectID": "website/database_structure.html#datasets",
    "href": "website/database_structure.html#datasets",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "The Datasets table represents the main organizational structure in VegVault, serving as the keystone for managing and organizing all data. Each Dataset contains one row with a unique Dataset ID (dataset_id), Dataset name (dataset_name), geographic location (coord_lat, coord_long), Dataset Type (dataset_type_id), Dataset Source (data_source_id), Dataset Source Type (dataset_source_type_id), and Sampling Method (sampling_method_id).\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset (unique)\n\n\ndataset_name\nTEXT\nName of each Dataset\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source\n\n\ndataset_type_id\nINTEGER\nID of a Dataset Type\n\n\ndata_source_type_id\nINTEGER\nID of a Dataset Source-Type\n\n\ncoord_long\nREAL\nGeographical coordinates - longitude\n\n\ncoord_lat\nREAL\nGeographical coordinates - latitude\n\n\nsampling_method_id\nINTEGER\nID of a Sampling Method\n\n\n\nColumn names and types for table Datasets.\n\n\n\nThe Dataset Type defines the most basic classification of each Dataset, ensuring that the vast amount of data is categorized systematically. Currently, VegVault contains the following types of Datasets:\n\nvegetation_plot: This type includes contemporary vegetation plot data, capturing contemporary vegetation characteristics and distributions.\nfossil_pollen_archive: This type encompasses past vegetation plot data derived from fossil pollen records, providing insights into past vegetation and climate dynamics.\ntraits: This type contains functional trait data, detailing specific characteristics of plant species that influence their ecological roles.\ngridpoints: This type holds artificially created Datasets to manage abiotic data, here climate and soil information (a dataset type created to hold abiotic data, see details in the Methods section).\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_type_id\nINTEGER\nID of a Dataset Type (unique)\n\n\ndataset_type\nTEXT\nText description of individual Dataset Types (currently vegetation_plot, fossil_pollen_archive, traits, gridpoints)\n\n\n\nColumn names and types for table DatasetTypeID.\n\n\n\n\n\nVegVault maintains detailed information about the primary data source, thereby enhancing the findability and referencing of primary data sources. Each Dataset is derived from a specific Source-Type that provides detailed information on the source used to retrieve the original data. The current Source-Types in VegVault include:\n\nBIEN - Botanical Information and Ecology Network\nsPlotOpen - The open-access version of sPlot\nTRY - TRY Plant Trait Database\nNeotoma-FOSSILPOL - The workflow that aims to process and standardise global palaeoecological pollen data. Note that we specifically state Neotoma-FOSSILPOL and not just Neotoma, as FOSSILPOL not only provides the data acquisition but also alters it (e.g., creating new age-depth models). It also addresses major challenges in paleoecological data integration, such as age uncertainty, by incorporating probabilistic age-depth models and their associated uncertainty matrices. This enables the propagation of temporal uncertainty in subsequent analyses, a critical advancement for robust macroecological studies, previously flagged as a major issue with paleo-data.\ngridpoints - artificially created Datasets to hold abiotic data\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_type_id\nINTEGER\nID of a Dataset Source-Type (unique)\n\n\ndataset_source_type\nTEXT\nText description of individual Dataset Source-Type (currently, BEIN, sPlotOpen, TRY, Neotoma-FOSSILPOL, gridpoints)\n\n\n\nColumn names and types for table DatasetSourceTypeID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_type_id\nINTEGER\nNA\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\ndata_source_id\nNA\nID of a Dataset Source\n\n\n\nColumn names and types for table DatasetSourceTypeReference.\n\n\n\n\n\nEach individual Dataset from a specific Dataset Source-Type can have information on the source of the data (i.e.¬†sub-database). VegVault v1.0.0 currently includes 706 sources of Datasets, where each dataset can also have one or more direct references to specific data, ensuring that users can accurately cite and verify the sources of their data. This should help to promote better findability of the primary source of data and referencing.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source (unique)\n\n\ndata_source_desc\nTEXT\nText description of individual Dataset Sources (e.g., name of the sub-database from the primary source)\n\n\n\nColumn names and types for table DatasetSourcesID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndata_source_id\nINTEGER\nID of a Dataset Source\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table DatasetSourcesReference.\n\nCurrently, there are 691 sources of datasets.\n\n\n\n\nSampling methods vary significantly across the different types of Datasets integrated into VegVault, reflecting the diverse nature of the data collected. Such information is crucial for understanding the context and limitations of each Dataset Type. For contemporary vegetation plots, sampling involves standardised plot inventories and surveys that capture detailed vegetation characteristics across various regions. Fossil pollen data are collected from sediment records from numerous different depositional environments representing past vegetation and climate dynamics. Therefore, information on sampling methods is only available for both vegetation_plot and fossil_pollen_archive Datasets, providing metadata that ensures accurate and contextually relevant analyses.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsampling_method_id\nINTEGER\nID of a Dataset Sampling Method (unique)\n\n\nsampling_method_details\nTEXT\nText description of individual Dataset Sampling Methods\n\n\n\nColumn names and types for table SamplingMethodID.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsampling_method_id\nINTEGER\nID of a Dataset Sampling Method\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table SamplingMethodReference.\n\n\n\n\n\nTo support robust and transparent scientific research, each Dataset in VegVault can have multiple references at different levels. The Dataset Source-Type, Dataset Source, and Sampling Method can all have their own references, providing detailed provenance and citation information. This multi-level referencing system enhances the traceability and validation of the data. Each dataset can also have one or more direct references to specific data, further ensuring that users can accurately cite and verify the sources of their data.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table DatasetReferences.\n\nThis means that one dataset can have one/several references from each of those parts. Let‚Äôs take a look at an example of what that could mean in practice.\nWe have selected dataset ID: 91256, which is a fossil pollen archive. Therefore, it has the reference of the Dataset Source-Type:\n\nFlantua, S. G. A., Mottl, O., Felde, V. A., Bhatta, K. P., Birks, H. H., Grytnes, J.-A., Seddon, A. W. R., & Birks, H. J. B. (2023). A guide to the processing and standardization of global palaeoecological data for large-scale syntheses using fossil pollen. Global Ecology and Biogeography, 32, 1377‚Äì1394. https://doi.org/10.1111/geb.13693\n\nand reference for the individual dataset:\n\nGrimm, E.C., 2008. Neotoma: an ecosystem database for the Pliocene, Pleistocene, and Holocene. Illinois State Museum Scientific Papers E Series, 1."
  },
  {
    "objectID": "website/database_structure.html#samples",
    "href": "website/database_structure.html#samples",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "Samples represent the main unit of data in VegVault, serving as the fundamental building blocks for all analyses. There are currently over 13 million Samples in VegVault v1.0.0 (of which ~ 1.6 million are gridpoints of abiotic data, see Database Assembly).\nVegVault encompasses both contemporary and paleo data, necessitating accurate age information for each Sample. Contemporary Samples are assigned an age of 0, while Samples from fossil pollen records are in calibrated years before the present (cal yr BP). The ‚Äúpresent‚Äù is here specified as 1950 AD.\n\n\nThe table contains one Sample per row, with each Sample containing: a unique Sample ID (sample_id), Sample name (sample_name), temporal information about Sample (age), sample site (size of the plot if available; sample_size_id), and additional information about sample (sample_details; this is currently not being used in v1.0.0.). As VegVault encompasses both contemporary and paleo-data, accurate age information is required for each Sample.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample (unique)\n\n\nsample_name\nTEXT\nName of a Sample\n\n\nsample_details\nTEXT\nSpecific description of a Sample. Currently not being used.\n\n\nage\nREAL\nAge of sample. Mainly used for fossil_pollen_archives, where note the age of a Sample in calibrated years before present. Note that all contemporary Samples, have age of 0.\n\n\nsample_size_id\nINTEGER\nID of a Sample Size\n\n\n\nColumn names and types for table Samples.\n\n\n\n\nEach Sample is linked to a specific Dataset via the DatasetSample table, which ensures that every Sample is correctly associated with its corresponding Dataset Type (whether it is vegetation_plot, fossil_pollen_archive, traits, or gridpoint) and other Dataset properties (e.g., geographic location). One Dataset contains several Samples only in a case where they differ in time (age).\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\n\nColumn names and types for table DatasetSample.\n\n\n\n\nThe size of vegetation plots can vary substantially. This detail is crucial for ecological studies where plot size can influence species diversity and abundance metrics, thus impacting follow-up analyses and interpretations. To account for this variability, information about the plot size is recorded separately for each contemporary Sample.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_size_id\nINTEGER\nID of a size category (unique)\n\n\nsample_size\nREAL\nNumeric expression of size\n\n\ndescription\nTEXT\nMostly description of units in which the values are stored\n\n\n\nColumn names and types for table SampleSizeID.\n\n\n\n\n\nEach Sample from the fossil_pollen_archive Dataset is also associated with an uncertainty matrix generated during the re-estimation of ages using FOSSILPOL workflow. This matrix provides a range of potential ages derived from age-depth modelling, reflecting the inherent uncertainty in dating paleoecological records.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\niteration\nINTEGER\nID of a iteration from age depth model. Currently, the is 1000 iteration per each Sample.\n\n\nage\nINTEGER\nPotential age of a Sample\n\n\n\nColumn names and types for table SampleUncertainty.\n\nWe can show this on the previously selected fossil pollen archive with dataset ID: 91256.\n\n\n\n\nEach Sample in VegVault can have specific References in addition to those at the Dataset-level. These individual Sample References provide detailed provenance and citation information, ensuring that users can trace the origin and validation of each data point. Note that a single Sample can have several References. This level of referencing enhances the transparency and reliability of the data, especially when the dataset continues to be updated in the future.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table SampleReference."
  },
  {
    "objectID": "website/database_structure.html#taxa",
    "href": "website/database_structure.html#taxa",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "The VegVault database records the original taxonomic names derived directly from the primary data sources, and currently, it holds over 100 thousand taxonomic names.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon (unique)\n\n\ntaxon_name\nTEXT\nName of a Taxon from primary source.\n\n\n\nColumn names and types for table Taxa.\n\n\n\n\nEach individual Taxon is linked to corresponding Samples through the SampleTaxa table, ensuring accurate and systematic association between species and their ecological data. Note that the abundance information varies across the primary data sources. Therefore, users have to be careful while processing data from various sources.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\nvalue\nREAL\nAbundance representation of a Taxon (the units may differ among primary sources, i.e.¬†Dataset Source-Types)\n\n\n\nColumn names and types for table SampleTaxa.\n\n\n\n\n\nEach taxonomic name undergoes an automated classification (see Database Assembly) and results are stored in the TaxonClassification table. To classify the diverse taxa present in the VegVault database, the {taxospace} R package was used. This tool automatically aligns taxa names with the Taxonomy Backbone from the Global Biodiversity Information Facility, providing a standardized classification framework. Specifically, we try to find the best match of the raw names of taxa using Global Names Resolver.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\ntaxon_species\nINTEGER\nID of a Taxon, which was assign as species level\n\n\ntaxon_genus\nINTEGER\nID of a Taxon, which was assign as genus level\n\n\ntaxon_family\nINTEGER\nID of a Taxon, which was assign as family level\n\n\n\nColumn names and types for table TaxonClassification.\n\nTaxonomic classification for some Taxa might be only available down to the genus or family level, while most of the data is classified to species level. Classification information, detailed up to the family level, is stored for each taxon, ensuring consistency and facilitating comparative analyses across different datasets. Currently, the VegVault database holds over 110 thousand taxonomic names, of which we were unable to classify only 1312 (1.2%).\n\n\n\n\nEach taxon might get a reference. Currently, this is used to track the origin of the Taxon name (i.e.¬†which primary source was used first with this Taxon). Note that Taxa, generated from taxonomic classification are associated with ‚Äútaxospace‚Äù reference.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table TaxonReference."
  },
  {
    "objectID": "website/database_structure.html#traits",
    "href": "website/database_structure.html#traits",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "The Traits table contains the list of functional traits currently contained in VegVault. The table contains one Trait per row, with each Trait containing: a unique Trait ID (trait_id), original Trait name from primary source (trait_name), and Trait Domain (trait_domain_id). Functional traits of vegetation taxa follow the same structure of Dataset and Samples obtained directly from Dataset Source-Types.\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait (unique)\n\n\ntrait_domain_id\nINTEGER\nID of a Trait Domain\n\n\ntrait_name\nTEXT\nName of the trait from the primary source. See ‚ÄòVegVault Content‚Äô for the details about the specific columns used from primary sources.\n\n\n\nColumn names and types for table Traits.\n\n\n\n\nTraits are grouped into Trait Domains to allow for easier aggregation of Traits across data sources. As there are differences in trait names across sources of data and individual Datasets, the VegVault database contains Trait Domain information to group traits together. In total, six Trait Domains are present: Stem specific density, Leaf nitrogen content per unit mass, Diaspore mass, Plant height, Leaf area, Leaf mass per area, following Diaz et al.¬†(2016). Yet, it is up to the user to decide how to further aggregate trait values if multiple trait Samples of one Trait Domain are available for the same environmental or taxonomic entity.\n\n\n\n\n\n\n\n\nTrait domain\nTrait\nData Source\n\n\n\n\nStem specific density\nstem wood density\nBIEN\n\n\nStem specific density\nStem specific density (SSD, stem dry mass per stem fresh volume) or wood density\nTRY\n\n\nLeaf nitrogen content per unit mass\nleaf nitrogen content per leaf dry mass\nBIEN\n\n\nLeaf nitrogen content per unit mass\nLeaf nitrogen (N) content per leaf dry mass\nTRY\n\n\nDiaspore mass\nseed mass\nBIEN\n\n\nDiaspore mass\nSeed dry mass\nTRY\n\n\nPlant heigh\nwhole plant height\nBIEN\n\n\nPlant heigh\nPlant height vegetative\nTRY\n\n\nLeaf Area\nleaf area\nBIEN\n\n\nLeaf Area\nLeaf area (in case of compound leaves undefined if leaf or leaflet, undefined if petiole is in- or exluded)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, petiole excluded)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, petiole included)\nTRY\n\n\nLeaf Area\nLeaf area (in case of compound leaves: leaf, undefined if petiole in- or excluded)\nTRY\n\n\nLeaf mass per area\nleaf mass per area\nBIEN\n\n\nLeaf mass per area\nLeaf area per leaf dry mass (specific leaf area, SLA or 1/LMA): petiole included\nTRY\n\n\nLeaf mass per area\nLeaf area per leaf dry mass (specific leaf area, SLA or 1/LMA): undefined if petiole is in- or excluded)\nTRY\n\n\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_domain_id\nINTEGER\nID of a Trait Domain (unique)\n\n\ntrait_domain_name\nTEXT\nName of the Trait Domain from Diaz et al.¬†(2016)\n\n\ntrait_domanin_description\nTEXT\nNA\n\n\ntrait_domain_description\nNA\nAdditional information about the Trait Domain\n\n\n\nColumn names and types for table TraitsDomain.\n\n\n\n\n\nIn general, data of functional traits of vegetation taxa follow the same structure of the Dataset and Samples obtained directly from the Dataset Source-Types. Therefore, TraitsValue table contains not only the actual measured value of Trait observation but also information about linking information across Datasets, Samples, and Taxa. This comprehensive linkage ensures that each Trait value is accurately associated with its relevant ecological, environmental and taxonomic context.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait\n\n\ndataset_id\nINTEGER\nID of a Dataset\n\n\nsample_id\nINTEGER\nID of a Sample\n\n\ntaxon_id\nINTEGER\nID of a Taxon\n\n\ntrait_value\nREAL\nValue of specific measured observation of Trait.\n\n\n\nColumn names and types for table TraitsValue.\n\n\n\n\nTo ensure clarity and reproducibility, each Trait in VegVault can have additional References beyond the general Dataset and Sample References. These Trait-specific References provide detailed provenance and citation information, supporting rigorous scientific research and enabling users to trace the origins and validation of each trait value.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\ntrait_id\nINTEGER\nID of a Trait\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table TraitsReference."
  },
  {
    "objectID": "website/database_structure.html#abiotic-variables",
    "href": "website/database_structure.html#abiotic-variables",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "The abiotic data in the VegVault database provide essential information on environmental factors affecting vegetation distribution and traits. Currently, VegVault includes abiotic data from CHELSA, CHELSA-TRACE21, and WoSIS. CHELSA and CHELSA-TRACE21 provide high-resolution climate data, while WoSIS offers detailed soil information.\n\n\nAs VegVault contains abiotic variables from several primary sources, the AbioticVariable table contains descriptions of abiotic variables (abiotic_variable_name), their units (abiotic_variable_unit), and measurement details (measure_details). These data include variables such as climate and soil conditions, which are crucial for understanding the ecological contexts of vegetation dynamics.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nabiotic_variable_id\nINTEGER\nID of a Abiotic Variable\n\n\nabiotic_variable_name\nTEXT\nName of a Abiotic Variable from primary source\n\n\nabiotic_variable_unit\nTEXT\nUnit of a Abiotic Variable\n\n\nmeasure_details\nTEXT\nAdditional details about Abiotic Variable\n\n\nabiotic_variable_scale\nNA\nScale of a Abiotic Variable\n\n\n\nColumn names and types for table AbioticVariable.\n\n\n\n\n\n\n\n\nVariable name\nVariable unit\nSource of data\n\n\n\n\nbio1\nC (degree Celsius)\nmean annual air temperature\n\n\nbio4\nC (degree Celsius)\ntemperature seasonality\n\n\nbio6\nC (degree Celsius)\nmean daily minimum air temperature of the coldest month\n\n\nbio12\nkg m-2 year-1\nannual precipitation amount\n\n\nbio15\nUnitless\nprecipitation seasonality\n\n\nbio18\nkg m-2 quarter-1\nmean monthly precipitation amount of the warmest quarter\n\n\nbio19\nkg m-2 quarter-1\nmean monthly precipitation amount of the coldest quarter\n\n\nHWSD2\nUnitless\nSoilGrids-soil_class\n\n\n\n\n\n\nThe AbioticData table holds the actual values of abiotic variables (the units are the same for each AbioticVariable).\n\n\n\n\nGridpoints are stored in artificially created Datasets and Samples, with one Dataset holding more Samples only if they differ in age. We have estimated the spatial and temporal distance between each gridpoint and other non-gridpoint Samples (vegetation_plot, fossil_pollen_archive, and traits). We store the link between gridpoint and non-gridpoint Samples as well as the spatial and temporal distance. As this results in very large amounts of data, we have discarded any gridpoint Sample, which is not close to 50 km and/or 5000 years to any other non-gridpoint Samples as not relevant for the vegetation dynamics.\n\n\n\n\n\n\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nsample_id\nINTEGER\nID of non-gridpoint Sample\n\n\nsample_ref_id\nINTEGER\nID of gridpoint Sample\n\n\ndistance_in_km\nINTEGER\nDistance among samples expressed in kilometres\n\n\ndistance_in_years\nINTEGER\nDistance among samples expressed in years\n\n\n\nColumn names and types for table AbioticDataReference.\nSuch data structure allows that environmental context is readily available for each vegetation and trait Sample. For each non-gridpoint Sample, users can select the closest spatio-temporally abiotic data or get average from all surrounding gridpoints.\n\n\n\n\n\nEach Abiotic Variable can have a separate Reference, in addition to a Dataset and Sample.\n\n\n\ncolumn_name\ndata_type\ndescription\n\n\n\n\nabiotic_variable_id\nINTEGER\nID of an Abiotic Variable\n\n\nreference_id\nINTEGER\nID of a Reference\n\n\n\nColumn names and types for table AbioticVariableReference."
  },
  {
    "objectID": "website/database_structure.html#references-references",
    "href": "website/database_structure.html#references-references",
    "title": "VegVault Database Structure",
    "section": "",
    "text": "The References table is a central component that serves all sections of the VegVault database. This table contains all References, independent of the source of the reference and the type of data. Each row contains a single Reference, which is then linked to the type of data which is being referenced. This allows a single Reference to be used across data types, but also one data point having many different references.\nMoreover, most primary sources of the data have a license, which requires correct attribution. Therefore, each Reference has information if such a Reference needs to be cited while using the specific data."
  },
  {
    "objectID": "website/database_content.html",
    "href": "website/database_content.html",
    "title": "Database content",
    "section": "",
    "text": "VegVault v1.0.0 is a comprehensive SQLite database (~110 GB) that integrates global vegetation data spanning both contemporary and paleovegetation records. This unified database combines fossil pollen records, contemporary vegetation plots, functional trait measurements, and associated abiotic environmental data to provide an unprecedented resource for vegetation ecology research.\nThe database consists of 31 interconnected tables with 87 fields (variables). For detailed technical information, see our Database Structure documentation.\n\n\n\nVegVault v1.0.0 contains:\n\n\n\nDatasets\n&gt; 480,000\n\n\nSamples\n&gt; 13,000,000\n\n\nTaxa\n&gt; 110,000\n\n\nVegetation Traits\n6\n\n\nTrait Values\n&gt; 11,000,000\n\n\nAbiotic Variables\n8\n\n\nGeographic Coverage\nGlobal\n\n\nTemporal Coverage\n0-20,000 years BP\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nGetting Started: New to VegVault? Check our Database Access guide for download instructions and our Usage Examples for practical applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure - Technical database schema\nDatabase Assembly - Overview of the data assembly process\nDatabase Access - Download and setup instructions\nUsage Examples - Practical applications\nMaterials & Outputs - Publications and resources"
  },
  {
    "objectID": "website/database_content.html#database-content-overview",
    "href": "website/database_content.html#database-content-overview",
    "title": "Database content",
    "section": "",
    "text": "VegVault v1.0.0 is a comprehensive SQLite database (~110 GB) that integrates global vegetation data spanning both contemporary and paleovegetation records. This unified database combines fossil pollen records, contemporary vegetation plots, functional trait measurements, and associated abiotic environmental data to provide an unprecedented resource for vegetation ecology research.\nThe database consists of 31 interconnected tables with 87 fields (variables). For detailed technical information, see our Database Structure documentation."
  },
  {
    "objectID": "website/database_content.html#database-statistics",
    "href": "website/database_content.html#database-statistics",
    "title": "Database content",
    "section": "",
    "text": "VegVault v1.0.0 contains:\n\n\n\nDatasets\n&gt; 480,000\n\n\nSamples\n&gt; 13,000,000\n\n\nTaxa\n&gt; 110,000\n\n\nVegetation Traits\n6\n\n\nTrait Values\n&gt; 11,000,000\n\n\nAbiotic Variables\n8\n\n\nGeographic Coverage\nGlobal\n\n\nTemporal Coverage\n0-20,000 years BP\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nGetting Started: New to VegVault? Check our Database Access guide for download instructions and our Usage Examples for practical applications."
  },
  {
    "objectID": "website/database_content.html#related-resources",
    "href": "website/database_content.html#related-resources",
    "title": "Database content",
    "section": "",
    "text": "Database Structure - Technical database schema\nDatabase Assembly - Overview of the data assembly process\nDatabase Access - Download and setup instructions\nUsage Examples - Practical applications\nMaterials & Outputs - Publications and resources"
  },
  {
    "objectID": "website/database_access.html",
    "href": "website/database_access.html",
    "title": "Database Access & Usage",
    "section": "",
    "text": "VegVault v1.0.0 is available as a comprehensive SQLite database providing integrated access to global vegetation, trait, and environmental data.\nDownload VegVault v1.0.0 (SQLite)\n\n\n\n\n\n\nNote\n\n\n\nSystem Requirements: VegVault contains over 100GB of data. Ensure your system has sufficient storage space and memory (RAM) before downloading.\n\n\n\n\nFor users who prefer working with individual data tables, we provide VegVault as separate CSV files:\nDownload VegVault v1.0.0 (Flat Files)\n\n\n\n\n\n\nWarning\n\n\n\nNote: Flat files are not the recommended approach. Many files exceed 1GB and may be difficult to load into memory. We strongly recommend using the SQLite database with the {vaultkeepr} R package for optimal performance.\n\n\n\n\n\n\n\n\nTo make VegVault easily accessible, we developed {vaultkeepr}, a well-tested R package (&gt;95% code coverage) that provides intuitive functions for interacting with the database. The package handles database connections, data filtering, and extraction, allowing you to retrieve only project-specific data without loading everything into memory.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall {vaultkeepr} from GitHub:\n\n# install.packages(\"remotes\")\nremotes::install_github(\"OndrejMottl/vaultkeepr\")\n\nLoad the package:\n\nlibrary(vaultkeepr)\n\n\n\n\nSee our Usage Examples for detailed demonstrations of how to:\n\nExtract vegetation data for specific regions and time periods\nAccess functional trait information\nLink abiotic environmental data\nPerform taxonomic harmonization\n\n\n\n\n\n\n\nVegVault is released under CC BY 4.0 License (Creative Commons Attribution 4.0), allowing you to:\n\nCopy and redistribute the material\nAdapt and build upon the material\n\nRequirements: You must provide appropriate attribution to VegVault and cite all primary data sources.\n\n\n\nWhen using VegVault in your research:\n\nCite VegVault: Always cite the latest VegVault version with its corresponding DOI\nCite primary sources: Acknowledge all original data providers included in your analysis\nUse our helper function: The vaultkeepr::get_references() function automatically generates the complete list of recommended citations for your specific data compilation\n\n\n\n\nPre-print: ‚ÄúVegVault database: linking global paleo-, and neo-vegetation data with functional traits and abiotic drivers‚Äù\nAccess Pre-print\nFor additional citation materials, visit our Materials & Outputs page.\n\n\n\n\n\n\nVegVault‚Äôs quality depends on the completeness, accuracy, and reliability of primary data sources. We acknowledge potential issues in global ecological databases (as noted for TRY) but focus on improving data re-usability rather than correcting source data quality issues.\n\n\n\n\nStorage requirements: &gt;100GB database size may be challenging for some systems\nMemory requirements: Large datasets may require substantial RAM for analysis\nVersion dependencies: Always specify the VegVault version used in your research\n\n\n\n\n\n\nDatabase Structure - Detailed technical documentation\nDatabase Content - Overview of included data\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage scenarios\nContact & Support - Get help and report issues"
  },
  {
    "objectID": "website/database_access.html#download-vegvault-database",
    "href": "website/database_access.html#download-vegvault-database",
    "title": "Database Access & Usage",
    "section": "",
    "text": "VegVault v1.0.0 is available as a comprehensive SQLite database providing integrated access to global vegetation, trait, and environmental data.\nDownload VegVault v1.0.0 (SQLite)\n\n\n\n\n\n\nNote\n\n\n\nSystem Requirements: VegVault contains over 100GB of data. Ensure your system has sufficient storage space and memory (RAM) before downloading.\n\n\n\n\nFor users who prefer working with individual data tables, we provide VegVault as separate CSV files:\nDownload VegVault v1.0.0 (Flat Files)\n\n\n\n\n\n\nWarning\n\n\n\nNote: Flat files are not the recommended approach. Many files exceed 1GB and may be difficult to load into memory. We strongly recommend using the SQLite database with the {vaultkeepr} R package for optimal performance."
  },
  {
    "objectID": "website/database_access.html#accessing-vegvault-with-vaultkeepr",
    "href": "website/database_access.html#accessing-vegvault-with-vaultkeepr",
    "title": "Database Access & Usage",
    "section": "",
    "text": "To make VegVault easily accessible, we developed {vaultkeepr}, a well-tested R package (&gt;95% code coverage) that provides intuitive functions for interacting with the database. The package handles database connections, data filtering, and extraction, allowing you to retrieve only project-specific data without loading everything into memory.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall {vaultkeepr} from GitHub:\n\n# install.packages(\"remotes\")\nremotes::install_github(\"OndrejMottl/vaultkeepr\")\n\nLoad the package:\n\nlibrary(vaultkeepr)\n\n\n\n\nSee our Usage Examples for detailed demonstrations of how to:\n\nExtract vegetation data for specific regions and time periods\nAccess functional trait information\nLink abiotic environmental data\nPerform taxonomic harmonization"
  },
  {
    "objectID": "website/database_access.html#guidelines-for-data-reuse-and-citation",
    "href": "website/database_access.html#guidelines-for-data-reuse-and-citation",
    "title": "Database Access & Usage",
    "section": "",
    "text": "VegVault is released under CC BY 4.0 License (Creative Commons Attribution 4.0), allowing you to:\n\nCopy and redistribute the material\nAdapt and build upon the material\n\nRequirements: You must provide appropriate attribution to VegVault and cite all primary data sources.\n\n\n\nWhen using VegVault in your research:\n\nCite VegVault: Always cite the latest VegVault version with its corresponding DOI\nCite primary sources: Acknowledge all original data providers included in your analysis\nUse our helper function: The vaultkeepr::get_references() function automatically generates the complete list of recommended citations for your specific data compilation\n\n\n\n\nPre-print: ‚ÄúVegVault database: linking global paleo-, and neo-vegetation data with functional traits and abiotic drivers‚Äù\nAccess Pre-print\nFor additional citation materials, visit our Materials & Outputs page."
  },
  {
    "objectID": "website/database_access.html#important-limitations",
    "href": "website/database_access.html#important-limitations",
    "title": "Database Access & Usage",
    "section": "",
    "text": "VegVault‚Äôs quality depends on the completeness, accuracy, and reliability of primary data sources. We acknowledge potential issues in global ecological databases (as noted for TRY) but focus on improving data re-usability rather than correcting source data quality issues.\n\n\n\n\nStorage requirements: &gt;100GB database size may be challenging for some systems\nMemory requirements: Large datasets may require substantial RAM for analysis\nVersion dependencies: Always specify the VegVault version used in your research"
  },
  {
    "objectID": "website/database_access.html#additional-resources",
    "href": "website/database_access.html#additional-resources",
    "title": "Database Access & Usage",
    "section": "",
    "text": "Database Structure - Detailed technical documentation\nDatabase Content - Overview of included data\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage scenarios\nContact & Support - Get help and report issues"
  },
  {
    "objectID": "website/contact.html",
    "href": "website/contact.html",
    "title": "Contact & Support",
    "section": "",
    "text": "We are committed to building an active community around VegVault and provide multiple channels for communication, support, and collaboration.\n\n\n\n\nWe use GitHub Discussions as our main platform for community interaction. Whether you have questions, ideas for new features, or want to connect with other users, this is the best place to start.\nBefore posting, please: - Search existing discussions to avoid duplicates - Use clear, descriptive titles - Provide context and relevant details\n\n\n\nFound a problem? Please use our Issues page to report bugs or technical problems.\nIssue Reporting Guidelines:\n\nCheck first: Search GitHub Discussions Q&A section and existing Issues to see if your problem has been reported\nUse filters: Search using keywords and labels to narrow down results\nBe specific: When opening a new issue, provide detailed information including:\n\nClear description of the problem\nExpected vs.¬†actual behavior\nSteps to reproduce the issue\nRelevant files, code, or screenshots\n\n\nTo Report a New Issue: 1. Click the green New issue button 2. Select Bug report template 3. Fill in all relevant details 4. Choose appropriate labels 5. Submit and await response from our team\n\n\n\n\nInterested in contributing to VegVault development? See our Contributing Guide for detailed information on: - Data contributions - Code contributions\n- Development guidelines - Pull request process\n\n\n\n\nDatabase Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage examples\nDatabase Structure - Technical documentation"
  },
  {
    "objectID": "website/contact.html#get-in-touch",
    "href": "website/contact.html#get-in-touch",
    "title": "Contact & Support",
    "section": "",
    "text": "We use GitHub Discussions as our main platform for community interaction. Whether you have questions, ideas for new features, or want to connect with other users, this is the best place to start.\nBefore posting, please: - Search existing discussions to avoid duplicates - Use clear, descriptive titles - Provide context and relevant details\n\n\n\nFound a problem? Please use our Issues page to report bugs or technical problems.\nIssue Reporting Guidelines:\n\nCheck first: Search GitHub Discussions Q&A section and existing Issues to see if your problem has been reported\nUse filters: Search using keywords and labels to narrow down results\nBe specific: When opening a new issue, provide detailed information including:\n\nClear description of the problem\nExpected vs.¬†actual behavior\nSteps to reproduce the issue\nRelevant files, code, or screenshots\n\n\nTo Report a New Issue: 1. Click the green New issue button 2. Select Bug report template 3. Fill in all relevant details 4. Choose appropriate labels 5. Submit and await response from our team"
  },
  {
    "objectID": "website/contact.html#contributing-to-vegvault",
    "href": "website/contact.html#contributing-to-vegvault",
    "title": "Contact & Support",
    "section": "",
    "text": "Interested in contributing to VegVault development? See our Contributing Guide for detailed information on: - Data contributions - Code contributions\n- Development guidelines - Pull request process"
  },
  {
    "objectID": "website/contact.html#additional-resources",
    "href": "website/contact.html#additional-resources",
    "title": "Contact & Support",
    "section": "",
    "text": "Database Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage examples\nDatabase Structure - Technical documentation"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "VegVault",
    "section": "",
    "text": "This is the official website dedicated to the VegVault project. VegVault is a comprehensive SQLite database that integrates global paleo- and neo-ecological vegetation data with functional traits and abiotic information, including climate and soil data. By bridging historical and contemporary data across multiple temporal and spatial scales, VegVault provides a unique resource for examining long-term ecological patterns and processes, thereby enhancing our ability to predict future biodiversity trajectories and ecosystem responses under changing climatic conditions.\nThe project integrates data from multiple well-established sources including the Neotoma Paleoecology Database, sPlotOpen, BIEN, TRY Plant Trait Database, CHELSA climate data, and WoSIS soil data to provide a comprehensive view of vegetation dynamics across space and time.\nCreating such an integrated database, in which gathering and processing of the data is reproducible, is a crucial step toward improving our understanding of biodiversity dynamics under changing climatic conditions and safeguarding biodiversity in an uncertain future.\nThe project is part of the BIODYNAMICS project.\n\n\n\n\nAccess the Database - Download VegVault and get started\nDatabase Structure - Understand the data organization\nUsage Examples - See practical applications\nDatabase Content - Explore what‚Äôs included\nGet Involved - Contribute to the project\n\nAccess Database Database Pre-print"
  },
  {
    "objectID": "index.html#database-linking-global-paleo--and-neo-vegetation-data-functional-traits-and-climate",
    "href": "index.html#database-linking-global-paleo--and-neo-vegetation-data-functional-traits-and-climate",
    "title": "VegVault",
    "section": "",
    "text": "This is the official website dedicated to the VegVault project. VegVault is a comprehensive SQLite database that integrates global paleo- and neo-ecological vegetation data with functional traits and abiotic information, including climate and soil data. By bridging historical and contemporary data across multiple temporal and spatial scales, VegVault provides a unique resource for examining long-term ecological patterns and processes, thereby enhancing our ability to predict future biodiversity trajectories and ecosystem responses under changing climatic conditions.\nThe project integrates data from multiple well-established sources including the Neotoma Paleoecology Database, sPlotOpen, BIEN, TRY Plant Trait Database, CHELSA climate data, and WoSIS soil data to provide a comprehensive view of vegetation dynamics across space and time.\nCreating such an integrated database, in which gathering and processing of the data is reproducible, is a crucial step toward improving our understanding of biodiversity dynamics under changing climatic conditions and safeguarding biodiversity in an uncertain future.\nThe project is part of the BIODYNAMICS project."
  },
  {
    "objectID": "index.html#quick-navigation",
    "href": "index.html#quick-navigation",
    "title": "VegVault",
    "section": "",
    "text": "Access the Database - Download VegVault and get started\nDatabase Structure - Understand the data organization\nUsage Examples - See practical applications\nDatabase Content - Explore what‚Äôs included\nGet Involved - Contribute to the project\n\nAccess Database Database Pre-print"
  },
  {
    "objectID": "website/contribute.html",
    "href": "website/contribute.html",
    "title": "Contributing to VegVault",
    "section": "",
    "text": "VegVault is envisioned as a continuously evolving database that will undergo regular updates for further improvement. We greatly appreciate community contributions and thank you for considering participating in the VegVault project.\nTo maintain the highest quality of data and code, we adhere to strict guidelines. Please read through this document to understand our contribution process.\n\n\n\n\nFound a bug or have an idea for enhancement? Visit our Contact & Support page for detailed reporting guidelines.\n\n\n\nWe continuously seek new datasets to include in future VegVault versions. If you know of valuable data sources that could enhance VegVault, we‚Äôd love to hear from you!\nHow to contribute data: 1. Review our Database Structure to understand current data types 2. Check our Database Content to see what‚Äôs already included 3. Contact us via GitHub Discussions with details about your proposed dataset 4. Our team will evaluate the data for compatibility and integration feasibility\n\n\n\nWe welcome contributions to improve VegVault‚Äôs codebase, documentation, and functionality.\n\n\nGit & GitHub Proficiency: - Familiarity with Git version control - Understanding of GitHub workflows - Experience with pull requests and collaborative development\nCoding Standards: We maintain consistency through our established Code Conventions. Please review and follow these guidelines for all contributions.\n\n\n\n1. Fork and Setup - Fork the repository to your GitHub account - Check out the appropriate branch (usually the next version branch if available) - Set up your development environment\n2. Development Guidelines - Single purpose: Each pull request should accomplish one clear, specific task - Descriptive naming: Use descriptive branch names (e.g., fix-database-connection, add-trait-validation) - Small commits: Each commit should represent one logical change with a clear message - Testing: Ensure your code passes all existing tests before committing\n3. Submit Pull Request When ready to contribute your changes:\n\nPrepare your PR:\n\nWrite clear commit messages following our guidelines\nEnsure all tests pass\nUpdate documentation if necessary\n\nCreate the PR:\n\nOpen a pull request with a descriptive title and detailed description\nLink PR to any related issues\nAllow maintainer edits for easier collaboration\n\nReview process:\n\nRespond to reviewer feedback promptly\nMake requested changes and mark conversations as resolved\nBe patient during the review process\n\n\n4. Merge Conflicts If you encounter merge conflicts, consult this git tutorial for resolution strategies.\n\n\n\n\n\n\nContact & Support - Community communication channels\nDatabase Access - Getting started with VegVault\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Usage examples and patterns"
  },
  {
    "objectID": "website/contribute.html#ways-to-contribute",
    "href": "website/contribute.html#ways-to-contribute",
    "title": "Contributing to VegVault",
    "section": "",
    "text": "Found a bug or have an idea for enhancement? Visit our Contact & Support page for detailed reporting guidelines.\n\n\n\nWe continuously seek new datasets to include in future VegVault versions. If you know of valuable data sources that could enhance VegVault, we‚Äôd love to hear from you!\nHow to contribute data: 1. Review our Database Structure to understand current data types 2. Check our Database Content to see what‚Äôs already included 3. Contact us via GitHub Discussions with details about your proposed dataset 4. Our team will evaluate the data for compatibility and integration feasibility\n\n\n\nWe welcome contributions to improve VegVault‚Äôs codebase, documentation, and functionality.\n\n\nGit & GitHub Proficiency: - Familiarity with Git version control - Understanding of GitHub workflows - Experience with pull requests and collaborative development\nCoding Standards: We maintain consistency through our established Code Conventions. Please review and follow these guidelines for all contributions.\n\n\n\n1. Fork and Setup - Fork the repository to your GitHub account - Check out the appropriate branch (usually the next version branch if available) - Set up your development environment\n2. Development Guidelines - Single purpose: Each pull request should accomplish one clear, specific task - Descriptive naming: Use descriptive branch names (e.g., fix-database-connection, add-trait-validation) - Small commits: Each commit should represent one logical change with a clear message - Testing: Ensure your code passes all existing tests before committing\n3. Submit Pull Request When ready to contribute your changes:\n\nPrepare your PR:\n\nWrite clear commit messages following our guidelines\nEnsure all tests pass\nUpdate documentation if necessary\n\nCreate the PR:\n\nOpen a pull request with a descriptive title and detailed description\nLink PR to any related issues\nAllow maintainer edits for easier collaboration\n\nReview process:\n\nRespond to reviewer feedback promptly\nMake requested changes and mark conversations as resolved\nBe patient during the review process\n\n\n4. Merge Conflicts If you encounter merge conflicts, consult this git tutorial for resolution strategies."
  },
  {
    "objectID": "website/contribute.html#related-resources",
    "href": "website/contribute.html#related-resources",
    "title": "Contributing to VegVault",
    "section": "",
    "text": "Contact & Support - Community communication channels\nDatabase Access - Getting started with VegVault\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Usage examples and patterns"
  },
  {
    "objectID": "website/database_assembly.html",
    "href": "website/database_assembly.html",
    "title": "Data Assembly Process",
    "section": "",
    "text": "VegVault v1.0.0 has been assembled through systematic integration of multiple publicly available databases, each contributing specialized data types to create a comprehensive vegetation database spanning both temporal and ecological dimensions.\n\n\n\nNeotoma Paleoecology Database - Fossil pollen data (0-20,000 years BP)\nsPlotOpen - Contemporary vegetation plots\n\nBIEN - Contemporary vegetation and functional traits\nTRY Plant Trait Database - Comprehensive plant functional traits\nCHELSA - High-resolution climate data (contemporary and paleoclimate)\nWoSIS - Global soil property data\n\n\n\n\nVegVault version 1.0.0 has been assembled through systematic integration of multiple publicly available databases, each contributing specialized data types to create a comprehensive vegetation database spanning both temporal and ecological dimensions.\n\n\nThe assembly workflow visualization:\n\nknitr::include_graphics(\n  here::here(\n    \"Outputs/Figures/DB_assembly_visualisation/assembly_viz_04.png\"\n  )\n)\n\n\n\n\n\n\n\n\nKey Assembly Steps:\n\nData Acquisition: Raw data obtained from primary sources\nData Processing: Individual processing pipelines for each data type using specialized GitHub repositories\nTaxonomic Harmonization: Using the {taxospace} R package to align taxa with GBIF backbone\nTrait Categorization: Grouping traits into functional domains following D√≠az et al.¬†(2016)\nSpatial-Temporal Linking: Creating gridpoints for abiotic data and linking to vegetation samples\nDatabase Integration: Consolidation into unified SQLite database structure\n\n\n\n\nAll VegVault processing repositories use GitHub Tags to ensure complete reproducibility. The specific tagged versions used for v1.0.0 are documented in both our code and documentation, enabling exact replication of the database assembly process.\n\n\n\nSpecialized Processing Pipelines:\n\nVegVault-FOSSILPOL v1.0.0 - Fossil pollen data processing\nVegVault-Vegetation_data v1.1.0 - Contemporary vegetation processing\n\nVegVault-Trait_data v1.1.0 - Functional trait data processing\nVegVault-abiotic_data v1.1.0 - Environmental data processing\nVegVault v1.0.0 - Final database integration\n\n\n\n\n\n\n\nFossil pollen records have been downloaded from the Neotoma Paleoecology Database using their API on 26th June 2023. All data acquisition and processing have been done using the FOSSILPOL: Workflow for processing and standardizing global paleoecological pollen data (version 1.0.0). This includes the selection of depositional environments, ecological groups, chronology control point types, and a minimum number of chronology control points to construct age-depth models. Individual samples and records have been filtered by age limits, number of pollen grains, maximum age interpolation, and number of valid levels. In addition, the accuracy of fossil pollen data is increased by re-estimating all age-depth models using the Bayesian probabilistic approach and including the information about individual age uncertainty.\nSelection Criteria:\n\nOnly records with type ‚Äúpollen‚Äù with valid geological coordinates (longitude between -180 and 180, latitude between -90 and 90)\nDepositional environments: lakes, bogs, and mires only (selection table)\nSpecific ecological groups retained (selection table)\nMinimum 5 chronology control points (valid types)\n\nQuality Filters:\n\nMinimum 125 pollen grains per sample (balanced for data retention vs.¬†quality)\n\nWhile the preferred minimum was initially set at 150, this threshold resulted in significant data loss\nThreshold adjusted to 125 with condition that less than 75% of samples would have low pollen sum\n\nAge limits: 0-20,000 cal yr BP\nExclusion of samples older than 3000 years of the last chronology control point\nMinimum 5 samples per record\nRe-calculated age-depth models using Bayesian approach ({Bchron} package)\n\nProcessing Details: Available at VegVault-FOSSILPOL\n\n\n\nThe primary sources of contemporary plot-based vegetation data are BIEN (Botanical Information and Ecology Network) and sPlotOpen (the open-access version of sPlot).\nBIEN Processing:\n\nDownloaded using {RBIEN} R package v1.2.7 on 2nd August 2023 using function BIEN::BIEN_plot_datasource()\nRetained key columns: ‚Äúdatasource_id‚Äù, ‚Äúdatasource‚Äù, ‚Äúplot_name‚Äù, ‚Äúsampling_protocol‚Äù, ‚Äúmethodology_reference‚Äù, ‚Äúmethodology_description‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, ‚Äúplot_area_ha‚Äù, ‚Äúsubplot‚Äù, ‚Äúindividual_count‚Äù, ‚Äúfamily_matched‚Äù, ‚Äúname_matched‚Äù, ‚Äúname_matched_author‚Äù, ‚Äúverbatim_family‚Äù, ‚Äúverbatim_scientific_name‚Äù, ‚Äúscrubbed_species_binomial‚Äù, ‚Äúscrubbed_taxonomic_status‚Äù, ‚Äúscrubbed_family‚Äù, ‚Äúscrubbed_author‚Äù\nAll columns renamed using ‚Äúsnake_style‚Äù\nFiltered out records with missing essential information (NA values in ‚Äúdatasource_id‚Äù, ‚Äúdatasource‚Äù, ‚Äúplot_name‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, and/or ‚Äúplot_area_ha‚Äù)\n\nsPlotOpen Processing:\n\nDownloaded sPlotOpen v2.0 on 26th September 2023\nLinked tables ‚ÄúDT2.oa‚Äù and ‚Äúheader.oa‚Äù via ‚ÄúPlotObservationID‚Äù column\nApplied quality filters for geographic and area data (filtered out rows with NA values in ‚ÄúPlotObservationID‚Äù, ‚ÄúGIVD_ID‚Äù, ‚ÄúLongitude‚Äù, ‚ÄúLatitude‚Äù, and/or ‚ÄúReleve_area‚Äù)\nAll columns renamed using ‚Äúsnake_style‚Äù\n\nProcessing Details: Available at VegVault-Vegetation_data\n\n\n\nFollowing D√≠az et al.¬†(2016), we selected six key functional traits representing:\n\nStem specific density\nLeaf nitrogen content per unit mass\n\nDiaspore mass\nPlant height\nLeaf area\nLeaf mass per area\n\nTRY Database Processing:\n\nData request ID: 28498 on 29th August 2023\nRequested traits with codes: 3106, 4, 3108, 3110, 3112, 3114, 3116, 3117, 14, and 26 (closest to D√≠az et al.¬†2016 description)\nUsed {rtry} R package v1.1.0 for data import\nFor each trait (‚ÄúTraitID‚Äù), extracted all relevant observations (‚ÄúObservationID‚Äù), ensuring only observations unique to each trait\nIdentified all unique data (‚ÄúDataID‚Äù) associated with each trait\nExcluded non-meaningful trait variations (DataID: 2221, 2222, 2223, 2224, 2225, 3646, 3647, 3698, 3699, 3727, 3728, 3730, 3731, 3849, 3850, 4029, and 4030), e.g., height at 15 days\nExtracted covariate information (additional data stored in ‚ÄúDataName‚Äù column)\nAll columns renamed using ‚Äúsnake_style‚Äù\nAdded ‚ÄúTrait Domain‚Äù variable to group traits following D√≠az et al.¬†(2016) selection for efficient extraction across TRY and BIEN\n\nBIEN Traits Processing:\n\nDownloaded using {RBIEN} R package v1.2.7 on 15th December 2023 using function BIEN::BIEN_trait_trait()\nRequested traits: ‚Äúwhole plant height‚Äù, ‚Äústem wood density‚Äù, ‚Äúleaf area‚Äù, ‚Äúleaf area per leaf dry mass‚Äù, ‚Äúleaf nitrogen content per leaf dry mass‚Äù, and ‚Äúseed mass‚Äù\nRetained columns: ‚Äútrait_name‚Äù, ‚Äútrait_value‚Äù, ‚Äúunit‚Äù, ‚Äúid‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, ‚Äúmethod‚Äù, ‚Äúurl_source‚Äù, ‚Äúsource_citation‚Äù, ‚Äúproject_pi‚Äù, ‚Äúscrubbed_species_binomial‚Äù, and ‚Äúaccess‚Äù\nCalculated derived measures (e.g., leaf mass per area = 1/leaf area per leaf dry mass)\n\nProcessing Details: Available at VegVault-Trait_data\n\n\n\nThe primary sources of abiotic data are CHELSA, CHELSA-TRACE21, and WoSIS Soil Profile Database. The first two data sources provide high-resolution downscaled climatic data, while the latter offers detailed soil information (only available for contemporary data).\nCHELSA Climate Data:\n\nContemporary: CHELSA v2.1 downloaded on 8th September 2023\nUsed {ClimDatDownloadR} R package with function ClimDatDownloadR::Chelsa.Clim.download()\nSelected bio-variables: 1, 4, 6, 12, 15, 18, 19\nSpatial aggregation: 25x factor using median values with {terra} R package function terra::aggregate(factor = 25, fun = \"median\")\n\nPaleoclimate: CHELSA-TRACE21\n\nPaleoclimate: CHELSA-TRACE21 v1.0 downloaded on 31st December 2023\nDownloaded values for each 500-year time-slice between 0 and 18,000 years before present (BP)\nSelected bio-variables: 1, 4, 6, 12, 15, 18, 19\nFor each time slice, applied spatial aggregation using terra::aggregate(factor = 25, fun = \"median\")\n\nWoSIS Soil Data:\n\nDownloaded on 11th September 2023 (both HWSD2_RASTER.zip and HWSD2_DB.zip)\nExtracted soil type names (column ‚ÄúHWSD2_SMU_ID‚Äù) by combining tables ‚ÄúHWSD2_SMU‚Äù and ‚ÄúD_WRB4‚Äù\nAdded soil type information to the raster\nResampled using terra::resample(method = \"near\") function to match climate data resolution\nProvides essential edaphic context for vegetation-environment relationships (contemporary data only)\n\nProcessing Details: Available at VegVault-abiotic_data\n\n\n\n\nAll processing pipelines with their corresponding Tags are migrated into an SQLite database using the GitHub repository titled VegVault, which can be accessed as DOI: 10.5281/zenodo.15201994.\n\n\nMigrating sPlotOpen vegetation data: - Dataset name (dataset_name) created from ‚Äúplot_observation_id‚Äù as ‚Äúsplot_[plot_observation_id]‚Äù - Original data source from column ‚Äúgivd_id‚Äù stored in DatasetSourcesID table - Sample name (sample_name) created using ‚Äúplot_observation_id‚Äù as ‚Äúsplot_[plot_observation_id]‚Äù - Sample Size (sample_size) created from ‚Äúreleve_area‚Äù column - All samples automatically assigned age of 0 - Taxonomic names extracted from ‚ÄúSpecies‚Äù column, abundances from ‚ÄúOriginal_abundance‚Äù\nMigrating BIEN vegetation data: - Dataset name (dataset_name) created as ‚Äúbien_[row number]‚Äù - Original data source from column ‚Äúdatasource‚Äù stored in DatasetSourcesID table - Sampling method extracted from ‚Äúmethodology_description‚Äù column - Sample name (sample_name) created as ‚Äúbien_[row number]‚Äù - Sample Size (sample_size) created from ‚Äúplot_area_ha‚Äù column, multiplied by 10,000 (stored in square meters) - All samples automatically assigned age of 0 - Taxonomic names extracted from ‚Äúname_matched‚Äù column\nMigrating fossil pollen data: - Dataset name (dataset_name) created from ‚Äúdataset_id‚Äù (fossilpol_[dataset_id]) - Note: column ‚Äúdataset_id‚Äù from primary source does not match ‚Äúdataset_id‚Äù in VegVault - Original data source from ‚Äúsource_of_data‚Äù column stored in DatasetSourcesID table - Sampling method extracted from ‚Äúdepositionalenvironment‚Äù column - Individual Dataset Reference extracted from ‚Äúdoi‚Äù column - Sample name (sample_name) created using ‚Äúdataset_id‚Äù and ‚Äúsample_id‚Äù as ‚Äúfossilpol_[dataset_id]_[sample_id]‚Äù - Ages extracted from ‚Äúlevels‚Äù column - Age uncertainty from age-depth models extracted from ‚Äúage_uncertainty‚Äù column - Taxonomic names and abundances extracted from ‚Äúcounts_harmonised‚Äù column\nMigrating TRY functional traits: - Dataset name (dataset_name) created as ‚Äútry_[row number]‚Äù - Original data source from column ‚Äúdataset‚Äù stored in DatasetSourcesID table - Individual Dataset Reference extracted from ‚Äúreference_source‚Äù column - Sample name (sample_name) created as ‚Äútry_[row number]‚Äù - Individual Sample reference extracted from ‚Äúdataset_reference_citation‚Äù - All samples automatically assigned age of 0 - Trait names extracted from ‚Äútrait_full_name‚Äù, taxonomic names from ‚Äúacc_species_name‚Äù, trait values from ‚Äútrait_value‚Äù\nMigrating BIEN functional traits: - Dataset name (dataset_name) created as ‚Äúbien_traits_[row number]‚Äù - Original data source from column ‚Äúproject_pi‚Äù stored in DatasetSourcesID table - Individual Dataset Reference extracted from ‚Äúsource_citation‚Äù column - Sample name (sample_name) created using column ‚Äúid‚Äù as ‚Äúbien_traits_[id]‚Äù - All samples automatically assigned age of 0 - Trait names extracted from ‚Äútrait_name‚Äù, taxonomic names from ‚Äúscrubbed_species_binomial‚Äù, trait values from ‚Äútrait_value‚Äù - Trait ‚Äúleaf mass per area‚Äù calculated from ‚Äúleaf area per leaf dry mass‚Äù as 1/value\n\n\n\nIn addition to the consolidation of all processed data into a unified SQLite database, the final VegVault migration repository performs three critical procedures to ensure data consistency and usability:\n\n\nAs VegVault integrates data on taxa from various sources, the {taxospace} R package is used to classify diverse taxa into a unifying taxonomic backbone. The {taxospace} tool automatically aligns taxon names with the GBIF taxonomical backbone. Specifically, we find the best match of raw taxon names using the Global Names Resolver, which is then aligned with GBIF. The resulting taxonomic classification information, detailed up to the family level, is stored for each taxon, ensuring consistency and facilitating comparative analyses across different datasets.\nImportant limitations: Taxonomic classification down to the species level is not available for each taxon (e.g., some fossil pollen types can only be identified to the genus or family level). For several taxa, no matching classification could be found. Note that taxonomic classification is additional information‚Äîthe original taxon name is always present and returned by default. Finally, users should be aware that this classification is an automated process and may contain errors.\n\n\n\nAs there are differences in trait names across data sources (e.g., ‚ÄúLeaf nitrogen (N) content per leaf dry mass‚Äù vs.¬†‚Äúleaf nitrogen content per leaf dry mass‚Äù), we added a new variable Trait Domain that groups traits together following the trait selection of D√≠az et al.¬†(2016). For example, trait ‚ÄúPlant height vegetative‚Äù from TRY and trait ‚Äúwhole plant height‚Äù from BIEN are both grouped under the ‚ÄúPlant height‚Äù Trait Domain. This grouping serves as an efficient mechanism for extracting comparable traits across both TRY and BIEN datasets.\n\n\n\nWe developed a data structure that provides readily available environmental context for each vegetation (and trait) record by creating spatio-temporal links between these records and abiotic information. As raster data are not suitable for storage in an SQLite database, we created artificial points, called ‚Äògridpoints‚Äô, located in the center of each raster cell. This resulted in a uniform spatio-temporal matrix of gridpoints holding the abiotic information.\nGridpoint naming conventions: Dataset names (dataset_name) are created as ‚Äúgeo_[longitude][latitude]‚Äù and Sample names (sample_name) are created as ‚Äùgeo[longitude][latitude][age]‚Äù.\nSpatial-temporal linking: We linked gridpoints with other non-gridpoint Samples (vegetation_plot, fossil_pollen_archive, and traits) and calculated the spatial and temporal distances between them. We retained any gridpoint Sample within 50 km and/or 5000 years from any other non-gridpoint Sample and discarded the rest.\n\n\n\n\n\n\nDatabase Content - Overview of available data\nDatabase Structure - Technical database schema\nDatabase Access - Download and setup instructions\n\nUsage Examples - Practical applications\nMaterials & Outputs - Publications and resources"
  },
  {
    "objectID": "website/database_assembly.html#assembly-details-of-vegvault-1.0.0",
    "href": "website/database_assembly.html#assembly-details-of-vegvault-1.0.0",
    "title": "Data Assembly Process",
    "section": "",
    "text": "VegVault version 1.0.0 has been assembled through systematic integration of multiple publicly available databases, each contributing specialized data types to create a comprehensive vegetation database spanning both temporal and ecological dimensions.\n\n\nThe assembly workflow visualization:\n\nknitr::include_graphics(\n  here::here(\n    \"Outputs/Figures/DB_assembly_visualisation/assembly_viz_04.png\"\n  )\n)\n\n\n\n\n\n\n\n\nKey Assembly Steps:\n\nData Acquisition: Raw data obtained from primary sources\nData Processing: Individual processing pipelines for each data type using specialized GitHub repositories\nTaxonomic Harmonization: Using the {taxospace} R package to align taxa with GBIF backbone\nTrait Categorization: Grouping traits into functional domains following D√≠az et al.¬†(2016)\nSpatial-Temporal Linking: Creating gridpoints for abiotic data and linking to vegetation samples\nDatabase Integration: Consolidation into unified SQLite database structure\n\n\n\n\nAll VegVault processing repositories use GitHub Tags to ensure complete reproducibility. The specific tagged versions used for v1.0.0 are documented in both our code and documentation, enabling exact replication of the database assembly process.\n\n\n\nSpecialized Processing Pipelines:\n\nVegVault-FOSSILPOL v1.0.0 - Fossil pollen data processing\nVegVault-Vegetation_data v1.1.0 - Contemporary vegetation processing\n\nVegVault-Trait_data v1.1.0 - Functional trait data processing\nVegVault-abiotic_data v1.1.0 - Environmental data processing\nVegVault v1.0.0 - Final database integration"
  },
  {
    "objectID": "website/database_assembly.html#data-processing-details",
    "href": "website/database_assembly.html#data-processing-details",
    "title": "Data Assembly Process",
    "section": "",
    "text": "Fossil pollen records have been downloaded from the Neotoma Paleoecology Database using their API on 26th June 2023. All data acquisition and processing have been done using the FOSSILPOL: Workflow for processing and standardizing global paleoecological pollen data (version 1.0.0). This includes the selection of depositional environments, ecological groups, chronology control point types, and a minimum number of chronology control points to construct age-depth models. Individual samples and records have been filtered by age limits, number of pollen grains, maximum age interpolation, and number of valid levels. In addition, the accuracy of fossil pollen data is increased by re-estimating all age-depth models using the Bayesian probabilistic approach and including the information about individual age uncertainty.\nSelection Criteria:\n\nOnly records with type ‚Äúpollen‚Äù with valid geological coordinates (longitude between -180 and 180, latitude between -90 and 90)\nDepositional environments: lakes, bogs, and mires only (selection table)\nSpecific ecological groups retained (selection table)\nMinimum 5 chronology control points (valid types)\n\nQuality Filters:\n\nMinimum 125 pollen grains per sample (balanced for data retention vs.¬†quality)\n\nWhile the preferred minimum was initially set at 150, this threshold resulted in significant data loss\nThreshold adjusted to 125 with condition that less than 75% of samples would have low pollen sum\n\nAge limits: 0-20,000 cal yr BP\nExclusion of samples older than 3000 years of the last chronology control point\nMinimum 5 samples per record\nRe-calculated age-depth models using Bayesian approach ({Bchron} package)\n\nProcessing Details: Available at VegVault-FOSSILPOL\n\n\n\nThe primary sources of contemporary plot-based vegetation data are BIEN (Botanical Information and Ecology Network) and sPlotOpen (the open-access version of sPlot).\nBIEN Processing:\n\nDownloaded using {RBIEN} R package v1.2.7 on 2nd August 2023 using function BIEN::BIEN_plot_datasource()\nRetained key columns: ‚Äúdatasource_id‚Äù, ‚Äúdatasource‚Äù, ‚Äúplot_name‚Äù, ‚Äúsampling_protocol‚Äù, ‚Äúmethodology_reference‚Äù, ‚Äúmethodology_description‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, ‚Äúplot_area_ha‚Äù, ‚Äúsubplot‚Äù, ‚Äúindividual_count‚Äù, ‚Äúfamily_matched‚Äù, ‚Äúname_matched‚Äù, ‚Äúname_matched_author‚Äù, ‚Äúverbatim_family‚Äù, ‚Äúverbatim_scientific_name‚Äù, ‚Äúscrubbed_species_binomial‚Äù, ‚Äúscrubbed_taxonomic_status‚Äù, ‚Äúscrubbed_family‚Äù, ‚Äúscrubbed_author‚Äù\nAll columns renamed using ‚Äúsnake_style‚Äù\nFiltered out records with missing essential information (NA values in ‚Äúdatasource_id‚Äù, ‚Äúdatasource‚Äù, ‚Äúplot_name‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, and/or ‚Äúplot_area_ha‚Äù)\n\nsPlotOpen Processing:\n\nDownloaded sPlotOpen v2.0 on 26th September 2023\nLinked tables ‚ÄúDT2.oa‚Äù and ‚Äúheader.oa‚Äù via ‚ÄúPlotObservationID‚Äù column\nApplied quality filters for geographic and area data (filtered out rows with NA values in ‚ÄúPlotObservationID‚Äù, ‚ÄúGIVD_ID‚Äù, ‚ÄúLongitude‚Äù, ‚ÄúLatitude‚Äù, and/or ‚ÄúReleve_area‚Äù)\nAll columns renamed using ‚Äúsnake_style‚Äù\n\nProcessing Details: Available at VegVault-Vegetation_data\n\n\n\nFollowing D√≠az et al.¬†(2016), we selected six key functional traits representing:\n\nStem specific density\nLeaf nitrogen content per unit mass\n\nDiaspore mass\nPlant height\nLeaf area\nLeaf mass per area\n\nTRY Database Processing:\n\nData request ID: 28498 on 29th August 2023\nRequested traits with codes: 3106, 4, 3108, 3110, 3112, 3114, 3116, 3117, 14, and 26 (closest to D√≠az et al.¬†2016 description)\nUsed {rtry} R package v1.1.0 for data import\nFor each trait (‚ÄúTraitID‚Äù), extracted all relevant observations (‚ÄúObservationID‚Äù), ensuring only observations unique to each trait\nIdentified all unique data (‚ÄúDataID‚Äù) associated with each trait\nExcluded non-meaningful trait variations (DataID: 2221, 2222, 2223, 2224, 2225, 3646, 3647, 3698, 3699, 3727, 3728, 3730, 3731, 3849, 3850, 4029, and 4030), e.g., height at 15 days\nExtracted covariate information (additional data stored in ‚ÄúDataName‚Äù column)\nAll columns renamed using ‚Äúsnake_style‚Äù\nAdded ‚ÄúTrait Domain‚Äù variable to group traits following D√≠az et al.¬†(2016) selection for efficient extraction across TRY and BIEN\n\nBIEN Traits Processing:\n\nDownloaded using {RBIEN} R package v1.2.7 on 15th December 2023 using function BIEN::BIEN_trait_trait()\nRequested traits: ‚Äúwhole plant height‚Äù, ‚Äústem wood density‚Äù, ‚Äúleaf area‚Äù, ‚Äúleaf area per leaf dry mass‚Äù, ‚Äúleaf nitrogen content per leaf dry mass‚Äù, and ‚Äúseed mass‚Äù\nRetained columns: ‚Äútrait_name‚Äù, ‚Äútrait_value‚Äù, ‚Äúunit‚Äù, ‚Äúid‚Äù, ‚Äúlongitude‚Äù, ‚Äúlatitude‚Äù, ‚Äúmethod‚Äù, ‚Äúurl_source‚Äù, ‚Äúsource_citation‚Äù, ‚Äúproject_pi‚Äù, ‚Äúscrubbed_species_binomial‚Äù, and ‚Äúaccess‚Äù\nCalculated derived measures (e.g., leaf mass per area = 1/leaf area per leaf dry mass)\n\nProcessing Details: Available at VegVault-Trait_data\n\n\n\nThe primary sources of abiotic data are CHELSA, CHELSA-TRACE21, and WoSIS Soil Profile Database. The first two data sources provide high-resolution downscaled climatic data, while the latter offers detailed soil information (only available for contemporary data).\nCHELSA Climate Data:\n\nContemporary: CHELSA v2.1 downloaded on 8th September 2023\nUsed {ClimDatDownloadR} R package with function ClimDatDownloadR::Chelsa.Clim.download()\nSelected bio-variables: 1, 4, 6, 12, 15, 18, 19\nSpatial aggregation: 25x factor using median values with {terra} R package function terra::aggregate(factor = 25, fun = \"median\")\n\nPaleoclimate: CHELSA-TRACE21\n\nPaleoclimate: CHELSA-TRACE21 v1.0 downloaded on 31st December 2023\nDownloaded values for each 500-year time-slice between 0 and 18,000 years before present (BP)\nSelected bio-variables: 1, 4, 6, 12, 15, 18, 19\nFor each time slice, applied spatial aggregation using terra::aggregate(factor = 25, fun = \"median\")\n\nWoSIS Soil Data:\n\nDownloaded on 11th September 2023 (both HWSD2_RASTER.zip and HWSD2_DB.zip)\nExtracted soil type names (column ‚ÄúHWSD2_SMU_ID‚Äù) by combining tables ‚ÄúHWSD2_SMU‚Äù and ‚ÄúD_WRB4‚Äù\nAdded soil type information to the raster\nResampled using terra::resample(method = \"near\") function to match climate data resolution\nProvides essential edaphic context for vegetation-environment relationships (contemporary data only)\n\nProcessing Details: Available at VegVault-abiotic_data"
  },
  {
    "objectID": "website/database_assembly.html#data-integration-procedures",
    "href": "website/database_assembly.html#data-integration-procedures",
    "title": "Data Assembly Process",
    "section": "",
    "text": "All processing pipelines with their corresponding Tags are migrated into an SQLite database using the GitHub repository titled VegVault, which can be accessed as DOI: 10.5281/zenodo.15201994.\n\n\nMigrating sPlotOpen vegetation data: - Dataset name (dataset_name) created from ‚Äúplot_observation_id‚Äù as ‚Äúsplot_[plot_observation_id]‚Äù - Original data source from column ‚Äúgivd_id‚Äù stored in DatasetSourcesID table - Sample name (sample_name) created using ‚Äúplot_observation_id‚Äù as ‚Äúsplot_[plot_observation_id]‚Äù - Sample Size (sample_size) created from ‚Äúreleve_area‚Äù column - All samples automatically assigned age of 0 - Taxonomic names extracted from ‚ÄúSpecies‚Äù column, abundances from ‚ÄúOriginal_abundance‚Äù\nMigrating BIEN vegetation data: - Dataset name (dataset_name) created as ‚Äúbien_[row number]‚Äù - Original data source from column ‚Äúdatasource‚Äù stored in DatasetSourcesID table - Sampling method extracted from ‚Äúmethodology_description‚Äù column - Sample name (sample_name) created as ‚Äúbien_[row number]‚Äù - Sample Size (sample_size) created from ‚Äúplot_area_ha‚Äù column, multiplied by 10,000 (stored in square meters) - All samples automatically assigned age of 0 - Taxonomic names extracted from ‚Äúname_matched‚Äù column\nMigrating fossil pollen data: - Dataset name (dataset_name) created from ‚Äúdataset_id‚Äù (fossilpol_[dataset_id]) - Note: column ‚Äúdataset_id‚Äù from primary source does not match ‚Äúdataset_id‚Äù in VegVault - Original data source from ‚Äúsource_of_data‚Äù column stored in DatasetSourcesID table - Sampling method extracted from ‚Äúdepositionalenvironment‚Äù column - Individual Dataset Reference extracted from ‚Äúdoi‚Äù column - Sample name (sample_name) created using ‚Äúdataset_id‚Äù and ‚Äúsample_id‚Äù as ‚Äúfossilpol_[dataset_id]_[sample_id]‚Äù - Ages extracted from ‚Äúlevels‚Äù column - Age uncertainty from age-depth models extracted from ‚Äúage_uncertainty‚Äù column - Taxonomic names and abundances extracted from ‚Äúcounts_harmonised‚Äù column\nMigrating TRY functional traits: - Dataset name (dataset_name) created as ‚Äútry_[row number]‚Äù - Original data source from column ‚Äúdataset‚Äù stored in DatasetSourcesID table - Individual Dataset Reference extracted from ‚Äúreference_source‚Äù column - Sample name (sample_name) created as ‚Äútry_[row number]‚Äù - Individual Sample reference extracted from ‚Äúdataset_reference_citation‚Äù - All samples automatically assigned age of 0 - Trait names extracted from ‚Äútrait_full_name‚Äù, taxonomic names from ‚Äúacc_species_name‚Äù, trait values from ‚Äútrait_value‚Äù\nMigrating BIEN functional traits: - Dataset name (dataset_name) created as ‚Äúbien_traits_[row number]‚Äù - Original data source from column ‚Äúproject_pi‚Äù stored in DatasetSourcesID table - Individual Dataset Reference extracted from ‚Äúsource_citation‚Äù column - Sample name (sample_name) created using column ‚Äúid‚Äù as ‚Äúbien_traits_[id]‚Äù - All samples automatically assigned age of 0 - Trait names extracted from ‚Äútrait_name‚Äù, taxonomic names from ‚Äúscrubbed_species_binomial‚Äù, trait values from ‚Äútrait_value‚Äù - Trait ‚Äúleaf mass per area‚Äù calculated from ‚Äúleaf area per leaf dry mass‚Äù as 1/value\n\n\n\nIn addition to the consolidation of all processed data into a unified SQLite database, the final VegVault migration repository performs three critical procedures to ensure data consistency and usability:\n\n\nAs VegVault integrates data on taxa from various sources, the {taxospace} R package is used to classify diverse taxa into a unifying taxonomic backbone. The {taxospace} tool automatically aligns taxon names with the GBIF taxonomical backbone. Specifically, we find the best match of raw taxon names using the Global Names Resolver, which is then aligned with GBIF. The resulting taxonomic classification information, detailed up to the family level, is stored for each taxon, ensuring consistency and facilitating comparative analyses across different datasets.\nImportant limitations: Taxonomic classification down to the species level is not available for each taxon (e.g., some fossil pollen types can only be identified to the genus or family level). For several taxa, no matching classification could be found. Note that taxonomic classification is additional information‚Äîthe original taxon name is always present and returned by default. Finally, users should be aware that this classification is an automated process and may contain errors.\n\n\n\nAs there are differences in trait names across data sources (e.g., ‚ÄúLeaf nitrogen (N) content per leaf dry mass‚Äù vs.¬†‚Äúleaf nitrogen content per leaf dry mass‚Äù), we added a new variable Trait Domain that groups traits together following the trait selection of D√≠az et al.¬†(2016). For example, trait ‚ÄúPlant height vegetative‚Äù from TRY and trait ‚Äúwhole plant height‚Äù from BIEN are both grouped under the ‚ÄúPlant height‚Äù Trait Domain. This grouping serves as an efficient mechanism for extracting comparable traits across both TRY and BIEN datasets.\n\n\n\nWe developed a data structure that provides readily available environmental context for each vegetation (and trait) record by creating spatio-temporal links between these records and abiotic information. As raster data are not suitable for storage in an SQLite database, we created artificial points, called ‚Äògridpoints‚Äô, located in the center of each raster cell. This resulted in a uniform spatio-temporal matrix of gridpoints holding the abiotic information.\nGridpoint naming conventions: Dataset names (dataset_name) are created as ‚Äúgeo_[longitude][latitude]‚Äù and Sample names (sample_name) are created as ‚Äùgeo[longitude][latitude][age]‚Äù.\nSpatial-temporal linking: We linked gridpoints with other non-gridpoint Samples (vegetation_plot, fossil_pollen_archive, and traits) and calculated the spatial and temporal distances between them. We retained any gridpoint Sample within 50 km and/or 5000 years from any other non-gridpoint Sample and discarded the rest."
  },
  {
    "objectID": "website/database_assembly.html#related-resources",
    "href": "website/database_assembly.html#related-resources",
    "title": "Data Assembly Process",
    "section": "",
    "text": "Database Content - Overview of available data\nDatabase Structure - Technical database schema\nDatabase Access - Download and setup instructions\n\nUsage Examples - Practical applications\nMaterials & Outputs - Publications and resources"
  },
  {
    "objectID": "website/database_examples.html",
    "href": "website/database_examples.html",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "To make VegVault as accessible as possible, we developed {vaultkeepr}, a comprehensive R package providing intuitive functions for interacting with the database. The package handles database connections, data filtering, and extraction, allowing you to retrieve only project-specific data without loading everything into memory. With &gt;95% code coverage, {vaultkeepr} is a well-tested interface for VegVault.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall {vaultkeepr} from GitHub:\n\n# install.packages(\"remotes\")\nremotes::install_github(\"OndrejMottl/vaultkeepr\")\n\nLoad the package:\n\nlibrary(vaultkeepr)\n\n\n\n\nThe following diagram illustrates the systematic workflow for accessing and extracting data from VegVault using {vaultkeepr}:\n\n\n\n\n\n\n\n\n\n\n\n\nDownload VegVault database and install {vaultkeepr}\nSelect Dataset Types: Choose from vegetation_plot, fossil_pollen_archive, traits, or gridpoints\nGeographic Filtering: Define spatial extent using vaultkeepr::select_dataset_by_geo()\nTemporal Filtering: Set age ranges with vaultkeepr::select_samples_by_age()\nAdd Data Attributes:\n\nTaxa data: Use vaultkeepr::get_taxa() with taxonomic harmonization options\nTrait data: Use vaultkeepr::get_traits() and filter by trait domains\nAbiotic data: Use vaultkeepr::get_abiotic_data() with spatial-temporal linking options\n\nExtract & Citation: Use vaultkeepr::extract_data() and vaultkeepr::get_references()\n\n\n\n\n\nThe following examples demonstrate VegVault‚Äôs capabilities across different research scenarios. Note that these examples focus on data extraction rather than analysis‚Äîthey show how to obtain properly formatted datasets for your research projects.\n\n\n\nThe first example demonstrates how to retrieve data for the genus Picea across North America by selecting both modern and fossil pollen plot datasets, filtering samples by geographic boundaries and temporal range (0 to 15,000 yr BP), and harmonizing taxa to the genus level. The resulting dataset allows users to study spatiotemporal patterns of Picea distribution over millennia. This can be accomplished by running the following code:\ndata_na_plots_picea &lt;-\n  # Access the VegVault\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Start by adding dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select both modern and paleo plot data\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"vegetation_plot\",\n      \"fossil_pollen_archive\"\n    )\n  ) %&gt;%\n  # Limit data to North America\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(22, 60),\n    long_lim = c(-135, -60)\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # Limit the samples by age\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(0, 15e3)\n  ) %&gt;%\n  # Add taxa & classify all data to a genus level\n  vaultkeepr::get_taxa(classify_to = \"genus\") %&gt;%\n  # Extract only Picea data\n  vaultkeepr::select_taxa_by_name(sel_taxa = \"Picea\") %&gt;%\n  vaultkeepr::extract_data()\nNow, we plot the presence of Picea in each 2500-year bin.\n\n\n\n\nIn the second example, the project aims to do species distribution modelling for plant taxa in the Czech Republic based on contemporary vegetation plot data and mean annual temperature. The code includes selecting datasets and extracting relevant abiotic data as followed:\ndata_cz_modern &lt;-\n  # Acess the VegVault file\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Add the dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select modern plot data and climate\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"vegetation_plot\",\n      \"gridpoints\"\n    )\n  ) %&gt;%\n  # Limit data to Czech Republic\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(48.5, 51.1),\n    long_lim = c(12, 18.9)\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # select only modern data\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(0, 0)\n  ) %&gt;%\n  # Add abiotic data\n  vaultkeepr::get_abiotic_data() %&gt;%\n  # Select only Mean Anual Temperature (bio1)\n  vaultkeepr::select_abiotic_var_by_name(sel_var_name = \"bio1\") %&gt;%\n  # add taxa\n  vaultkeepr::get_taxa() %&gt;%\n  vaultkeepr::extract_data()\nNow we can simply plot both the climatic data and the plot vegetation data:\n\n\n\n\nThe third example focuses on obtaining data to be able to reconstruct plant height for South and Central America between 6-12 ka cal yr BP (thousand years before present). This example project showcases the integration of trait data with paleo-vegetation records to subsequently study historical vegetation dynamics and functional composition of plant communities:\ndata_la_traits &lt;-\n  # Acess the VegVault file\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Add the dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select modern plot data and climate\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"fossil_pollen_archive\",\n      \"traits\"\n    )\n  ) %&gt;%\n  # Limit data to South and Central America\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(-53, 28),\n    long_lim = c(-110, -38),\n    sel_dataset_type = c(\n      \"fossil_pollen_archive\",\n      \"traits\"\n    )\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # Limit to 6-12 ka yr BP\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(6e3, 12e3)\n  ) %&gt;%\n  # add taxa & clasify all data to a genus level\n  vaultkeepr::get_taxa(classify_to = \"genus\") %&gt;%\n  # add trait information & clasify all data to a genus level\n  vaultkeepr::get_traits(classify_to = \"genus\") %&gt;%\n  # Only select the plant height\n  vaultkeepr::select_traits_by_domain_name(sel_domain = \"Plant heigh\") %&gt;%\n  vaultkeepr::extract_data()\nNow let‚Äôs plot the overview of the data\n\n\n\n\n\nDatabase Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Structure - Technical database documentation\n\nDatabase Content - Overview of available data\n{vaultkeepr} Documentation - Complete function reference"
  },
  {
    "objectID": "website/database_examples.html#introduction-to-vaultkeepr",
    "href": "website/database_examples.html#introduction-to-vaultkeepr",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "To make VegVault as accessible as possible, we developed {vaultkeepr}, a comprehensive R package providing intuitive functions for interacting with the database. The package handles database connections, data filtering, and extraction, allowing you to retrieve only project-specific data without loading everything into memory. With &gt;95% code coverage, {vaultkeepr} is a well-tested interface for VegVault."
  },
  {
    "objectID": "website/database_examples.html#installation-setup",
    "href": "website/database_examples.html#installation-setup",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "Install {vaultkeepr} from GitHub:\n\n# install.packages(\"remotes\")\nremotes::install_github(\"OndrejMottl/vaultkeepr\")\n\nLoad the package:\n\nlibrary(vaultkeepr)"
  },
  {
    "objectID": "website/database_examples.html#data-extraction-workflow",
    "href": "website/database_examples.html#data-extraction-workflow",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "The following diagram illustrates the systematic workflow for accessing and extracting data from VegVault using {vaultkeepr}:\n\n\n\n\n\n\n\n\n\n\n\n\nDownload VegVault database and install {vaultkeepr}\nSelect Dataset Types: Choose from vegetation_plot, fossil_pollen_archive, traits, or gridpoints\nGeographic Filtering: Define spatial extent using vaultkeepr::select_dataset_by_geo()\nTemporal Filtering: Set age ranges with vaultkeepr::select_samples_by_age()\nAdd Data Attributes:\n\nTaxa data: Use vaultkeepr::get_taxa() with taxonomic harmonization options\nTrait data: Use vaultkeepr::get_traits() and filter by trait domains\nAbiotic data: Use vaultkeepr::get_abiotic_data() with spatial-temporal linking options\n\nExtract & Citation: Use vaultkeepr::extract_data() and vaultkeepr::get_references()"
  },
  {
    "objectID": "website/database_examples.html#practical-examples",
    "href": "website/database_examples.html#practical-examples",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "The following examples demonstrate VegVault‚Äôs capabilities across different research scenarios. Note that these examples focus on data extraction rather than analysis‚Äîthey show how to obtain properly formatted datasets for your research projects."
  },
  {
    "objectID": "website/database_examples.html#example-1-spatiotemporal-patterns-of-the-picea-genus-across-north-america-since-the-lgm",
    "href": "website/database_examples.html#example-1-spatiotemporal-patterns-of-the-picea-genus-across-north-america-since-the-lgm",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "The first example demonstrates how to retrieve data for the genus Picea across North America by selecting both modern and fossil pollen plot datasets, filtering samples by geographic boundaries and temporal range (0 to 15,000 yr BP), and harmonizing taxa to the genus level. The resulting dataset allows users to study spatiotemporal patterns of Picea distribution over millennia. This can be accomplished by running the following code:\ndata_na_plots_picea &lt;-\n  # Access the VegVault\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Start by adding dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select both modern and paleo plot data\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"vegetation_plot\",\n      \"fossil_pollen_archive\"\n    )\n  ) %&gt;%\n  # Limit data to North America\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(22, 60),\n    long_lim = c(-135, -60)\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # Limit the samples by age\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(0, 15e3)\n  ) %&gt;%\n  # Add taxa & classify all data to a genus level\n  vaultkeepr::get_taxa(classify_to = \"genus\") %&gt;%\n  # Extract only Picea data\n  vaultkeepr::select_taxa_by_name(sel_taxa = \"Picea\") %&gt;%\n  vaultkeepr::extract_data()\nNow, we plot the presence of Picea in each 2500-year bin."
  },
  {
    "objectID": "website/database_examples.html#example-2-joined-species-distribution-model-for-all-vegetation-within-czechia",
    "href": "website/database_examples.html#example-2-joined-species-distribution-model-for-all-vegetation-within-czechia",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "In the second example, the project aims to do species distribution modelling for plant taxa in the Czech Republic based on contemporary vegetation plot data and mean annual temperature. The code includes selecting datasets and extracting relevant abiotic data as followed:\ndata_cz_modern &lt;-\n  # Acess the VegVault file\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Add the dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select modern plot data and climate\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"vegetation_plot\",\n      \"gridpoints\"\n    )\n  ) %&gt;%\n  # Limit data to Czech Republic\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(48.5, 51.1),\n    long_lim = c(12, 18.9)\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # select only modern data\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(0, 0)\n  ) %&gt;%\n  # Add abiotic data\n  vaultkeepr::get_abiotic_data() %&gt;%\n  # Select only Mean Anual Temperature (bio1)\n  vaultkeepr::select_abiotic_var_by_name(sel_var_name = \"bio1\") %&gt;%\n  # add taxa\n  vaultkeepr::get_taxa() %&gt;%\n  vaultkeepr::extract_data()\nNow we can simply plot both the climatic data and the plot vegetation data:"
  },
  {
    "objectID": "website/database_examples.html#example-3-patterns-of-plant-height-cwm-for-south-and-central-latin-america-between-6-12-ka",
    "href": "website/database_examples.html#example-3-patterns-of-plant-height-cwm-for-south-and-central-latin-america-between-6-12-ka",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "The third example focuses on obtaining data to be able to reconstruct plant height for South and Central America between 6-12 ka cal yr BP (thousand years before present). This example project showcases the integration of trait data with paleo-vegetation records to subsequently study historical vegetation dynamics and functional composition of plant communities:\ndata_la_traits &lt;-\n  # Acess the VegVault file\n  vaultkeepr::open_vault(path = \"&lt;path_to_VegVault&gt;\") %&gt;%\n  # Add the dataset information\n  vaultkeepr::get_datasets() %&gt;%\n  # Select modern plot data and climate\n  vaultkeepr::select_dataset_by_type(\n    sel_dataset_type = c(\n      \"fossil_pollen_archive\",\n      \"traits\"\n    )\n  ) %&gt;%\n  # Limit data to South and Central America\n  vaultkeepr::select_dataset_by_geo(\n    lat_lim = c(-53, 28),\n    long_lim = c(-110, -38),\n    sel_dataset_type = c(\n      \"fossil_pollen_archive\",\n      \"traits\"\n    )\n  ) %&gt;%\n  # Add samples\n  vaultkeepr::get_samples() %&gt;%\n  # Limit to 6-12 ka yr BP\n  vaultkeepr::select_samples_by_age(\n    age_lim = c(6e3, 12e3)\n  ) %&gt;%\n  # add taxa & clasify all data to a genus level\n  vaultkeepr::get_taxa(classify_to = \"genus\") %&gt;%\n  # add trait information & clasify all data to a genus level\n  vaultkeepr::get_traits(classify_to = \"genus\") %&gt;%\n  # Only select the plant height\n  vaultkeepr::select_traits_by_domain_name(sel_domain = \"Plant heigh\") %&gt;%\n  vaultkeepr::extract_data()\nNow let‚Äôs plot the overview of the data"
  },
  {
    "objectID": "website/database_examples.html#additional-resources",
    "href": "website/database_examples.html#additional-resources",
    "title": "VegVault Usage Examples",
    "section": "",
    "text": "Database Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Structure - Technical database documentation\n\nDatabase Content - Overview of available data\n{vaultkeepr} Documentation - Complete function reference"
  },
  {
    "objectID": "website/materials.html",
    "href": "website/materials.html",
    "title": "Materials & Outputs",
    "section": "",
    "text": "This page provides access to all VegVault-related resources including the database, publications, code, and presentation materials.\n\n\n\n\n\n\nVegVault v1.0.0 (SQLite Database - Recommended) Download Database v1.0.0\nPlease review our Database Access Guidelines for proper usage and citation requirements.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVegVault v1.0.0 (Flat Files - Not Recommended) Download Database v1.0.0 as Flat Files\n\n\n\n\n\n\nWarning\n\n\n\nNote: Flat files are provided for accessibility but are not the preferred method. Many files exceed 1GB and may be difficult to load. We strongly recommend using the SQLite database with {vaultkeepr} for optimal performance.\n\n\n\n\n\n\n\n\n‚ÄúVegVault database: linking global paleo-, and neo-vegetation data with functional traits and abiotic drivers‚Äù \n\n\n\n\n\n\n\n\nOfficial R package for VegVault database interaction {vaultkeepr} Documentation & Download\nThe package provides:\n\nEasy database connection and querying\nData filtering and extraction functions\nAutomatic citation generation\n code coverage with comprehensive testing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDownload VegVault Logo\nAvailable for use in presentations, publications, and educational materials with proper attribution.\n\n\n\nVegVault Poster - CSPE Conference (September 2024)\n\nLow Resolution Version\n\nHigh Resolution Version\n\n\n\n\n\n\n\nVegVault - IAVS Conference, Colorado, USA (August 2, 2025)\n\nView Slides\nSource Code\n\nVegVault Flash Presentation - Geobotany Meeting, Sudƒõjov (March 23, 2025)\n\nView Slides\nSource Code\n\n\n\n\n\n\nDatabase Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage examples\nDatabase Structure - Technical documentation\nContact & Support - Get help and report issues"
  },
  {
    "objectID": "website/materials.html#vegvault-database",
    "href": "website/materials.html#vegvault-database",
    "title": "Materials & Outputs",
    "section": "",
    "text": "VegVault v1.0.0 (SQLite Database - Recommended) Download Database v1.0.0\nPlease review our Database Access Guidelines for proper usage and citation requirements.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVegVault v1.0.0 (Flat Files - Not Recommended) Download Database v1.0.0 as Flat Files\n\n\n\n\n\n\nWarning\n\n\n\nNote: Flat files are provided for accessibility but are not the preferred method. Many files exceed 1GB and may be difficult to load. We strongly recommend using the SQLite database with {vaultkeepr} for optimal performance."
  },
  {
    "objectID": "website/materials.html#publications",
    "href": "website/materials.html#publications",
    "title": "Materials & Outputs",
    "section": "",
    "text": "‚ÄúVegVault database: linking global paleo-, and neo-vegetation data with functional traits and abiotic drivers‚Äù"
  },
  {
    "objectID": "website/materials.html#software-tools",
    "href": "website/materials.html#software-tools",
    "title": "Materials & Outputs",
    "section": "",
    "text": "Official R package for VegVault database interaction {vaultkeepr} Documentation & Download\nThe package provides:\n\nEasy database connection and querying\nData filtering and extraction functions\nAutomatic citation generation\n code coverage with comprehensive testing"
  },
  {
    "objectID": "website/materials.html#visual-resources",
    "href": "website/materials.html#visual-resources",
    "title": "Materials & Outputs",
    "section": "",
    "text": "Download VegVault Logo\nAvailable for use in presentations, publications, and educational materials with proper attribution.\n\n\n\nVegVault Poster - CSPE Conference (September 2024)\n\nLow Resolution Version\n\nHigh Resolution Version"
  },
  {
    "objectID": "website/materials.html#presentations",
    "href": "website/materials.html#presentations",
    "title": "Materials & Outputs",
    "section": "",
    "text": "VegVault - IAVS Conference, Colorado, USA (August 2, 2025)\n\nView Slides\nSource Code\n\nVegVault Flash Presentation - Geobotany Meeting, Sudƒõjov (March 23, 2025)\n\nView Slides\nSource Code"
  },
  {
    "objectID": "website/materials.html#additional-resources",
    "href": "website/materials.html#additional-resources",
    "title": "Materials & Outputs",
    "section": "",
    "text": "Database Access - Download and setup instructions\nDatabase Assembly - Data processing and integration procedures\nDatabase Examples - Practical usage examples\nDatabase Structure - Technical documentation\nContact & Support - Get help and report issues"
  }
]