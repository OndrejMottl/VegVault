---
format:
  html:
    fig-width: 10
date: 2025/01/24
date-format: long
date-modified: last-modified
sidebar: true
---

```{r}
#| label: source config
#| include: FALSE
#| results: 'hide'
#| warning: FALSE
#| message: FALSE

library(here)

here::i_am("website/database_examples.qmd")

# Load configuration
source(
  here::here(
    "R/00_Config_file.R"
  )
)

source(
  here::here(
    "R/03_Visualisation/00_Config_quarto.R"
  )
)

invisible(
  lapply(
    list.files(
      path = here::here("R/Functions"),
      pattern = "*.R",
      recursive = TRUE,
      full.names = TRUE
    ),
    source
  )
)
```

# VegVault Usage Examples

## Introduction to {vaultkeepr}

:::: {.columns}
::: {.column width="75%"}
To make [VegVault]{.vegvault} as accessible as possible, we developed [{vaultkeepr}](https://bit.ly/vaultkeepr), a comprehensive R package providing intuitive functions for interacting with the [database]{.database}. The package handles database connections, data filtering, and extraction, allowing you to retrieve only project-specific data without loading everything into memory. With >95% code coverage, {vaultkeepr} is a [well-tested]{.reproducibility} interface for [VegVault]{.vegvault}.
:::

::: {.column width="25%"}
```{r}
#| label: vaultkeepr-logo
knitr::include_graphics(
  "https://ondrejmottl.github.io/vaultkeepr/reference/figures/vaultkeeper_logo.png"
)
```
:::
::::

## Installation & Setup

Install {vaultkeepr} from GitHub:

```{r}
#| label: install
#| eval: false
#| echo: true
# install.packages("remotes")
remotes::install_github("OndrejMottl/vaultkeepr")
```

Load the package:

```{r}
#| label: example
#| echo: true
library(vaultkeepr)
```

## Data Extraction Workflow

The following diagram illustrates the systematic workflow for accessing and extracting data from VegVault using {vaultkeepr}:

```{r}
#| label: figure-extracting-data
knitr::include_graphics(
  here::here(
    "Outputs/Figures/Scheme_extraction/Scheme_04.png"
  )
)
```

### Key Workflow Steps:

1. **[Download VegVault](database_access.qmd)** database and install {vaultkeepr}
2. **Select Dataset Types**: Choose from `vegetation_plot`, `fossil_pollen_archive`, `traits`, or `gridpoints`
3. **Geographic Filtering**: Define spatial extent using `vaultkeepr::select_dataset_by_geo()`
4. **Temporal Filtering**: Set age ranges with `vaultkeepr::select_samples_by_age()`
5. **Add Data Attributes**:
   - **Taxa data**: Use `vaultkeepr::get_taxa()` with taxonomic harmonization options
   - **Trait data**: Use `vaultkeepr::get_traits()` and filter by trait domains
   - **Abiotic data**: Use `vaultkeepr::get_abiotic_data()` with spatial-temporal linking options
6. **Extract & Citation**: Use `vaultkeepr::extract_data()` and `vaultkeepr::get_references()`

## Practical Examples

The following examples demonstrate [VegVault]{.vegvault}'s capabilities across different research scenarios. Note that these examples focus on **data extraction** rather than analysisâ€”they show how to obtain properly formatted [datasets]{.database} for your research projects.

{{< include _database_examples.md >}}

## Additional Resources

- **[Database Access](database_access.qmd)** - Download and setup instructions
- **[Database Assembly](database_assembly.qmd)** - Data processing and integration procedures
- **[Database Structure](database_structure.qmd)** - Technical database documentation
- **[Database Content](database_content.qmd)** - Overview of available data
- **[{vaultkeepr} Documentation](https://bit.ly/vaultkeepr)** - Complete function reference