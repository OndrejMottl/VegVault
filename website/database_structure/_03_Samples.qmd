## Samples

`Samples` represent the main unit of data in **VegVault**, serving as the fundamental building blocks for all analyses. There are currently over 13 million `Samples` in **VegVault** v1.0.0 (of which ~ 1.6 million are gridpoints of abiotic data, see [Database Assembly](/website/database_assembly.qmd)). 

**VegVault** encompasses both contemporary and paleo data, necessitating accurate age information for each `Sample`. Contemporary `Samples` are assigned an age of `0`, while `Samples` from fossil pollen records are in calibrated years before the present (cal yr BP). The "present" is here specified as 1950 AD. 

```{r}
#| label: source config
#| include: FALSE
#| results: 'hide'
#| warning: FALSE
#| message: FALSE

library(here)

here::i_am("website/database_structure/_03_Samples.qmd")

# Load configuration
source(
  here::here(
    "R/00_Config_file.R"
  )
)

source(
  here::here(
    "R/03_Visualisation/00_Config_quarto.R"
  )
)

invisible(
  lapply(
    list.files(
      path = here::here("R/Functions"),
      pattern = "*.R",
      recursive = TRUE,
      full.names = TRUE
    ),
    source
  )
)

sel_dataset_for_example <- 91256
```

### Sample Structure Overview (`Samples`)

The table contains one `Sample` per row, with each `Sample` containing: a unique Sample ID (`sample_id`), Sample name (`sample_name`), temporal information about Sample (`age`), sample site (size of the plot if available; `sample_size_id`), and additional information about sample (`sample_details`; this is currently not being used in v1.0.0.). As **VegVault** encompasses both contemporary and paleo-data, accurate age information is required for each Sample. 

```{r}
#| label: Samples variables scheme structure
#| tbl-cap: "Column names and types for table Samples."
data_comments_samples <-
  tibble::tribble(
    ~column_name, ~description,
    "sample_id", "ID of a Sample (unique)",
    "sample_name", "Name of a Sample",
    "sample_details", "Specific description of a Sample. Currently not being used.",
    "age", "Age of sample. Mainly used for fossil_pollen_archives, where note the age of a Sample in calibrated years before present. Note that all contemporary Samples, have age of 0.",
    "sample_size_id", "ID of a Sample Size"
  )

get_db_table_data_types(
  con,
  "Samples"
) %>%
  dplyr::full_join(
    data_comments_samples,
    by = "column_name"
  ) %>%
  plot_table()
```


```{r}
#| label: Samples scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/Samples.png"
  )
)
```

### Dataset-Sample (`DatasetSample`)

Each Sample is linked to a specific `Dataset` via the `DatasetSample` table, which ensures that every Sample is correctly associated with its corresponding `Dataset Type` (whether it is `vegetation_plot`, `fossil_pollen_archive`, `traits`, or `gridpoint`) and other `Dataset` properties (e.g., geographic location). One `Dataset` contains several `Samples` only in a case where they differ in time (`age`). 

```{r}
#| label: DatasetSample variables scheme structure
#| tbl-cap: "Column names and types for table DatasetSample."
data_comments_dataset_sample <-
  tibble::tribble(
    ~column_name, ~description,
    "dataset_id", "ID of a Dataset",
    "sample_id", "ID of a Sample"
  )
get_db_table_data_types(
  con,
  "DatasetSample"
) %>%
  dplyr::full_join(
    data_comments_dataset_sample,
    by = "column_name"
  ) %>%
  plot_table()
```

```{r}
#| label: DatasetSample scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/DatasetSample.png"
  )
)
```

```{r}
#| label: Number of samples plot
n_samples_per_dataset_type <-
  dplyr::inner_join(
    dplyr::tbl(con, "Datasets"),
    dplyr::tbl(con, "DatasetTypeID"),
    by = "dataset_type_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "DatasetSample"),
    by = "dataset_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "Samples"),
    by = "sample_id"
  ) %>%
  dplyr::distinct(dataset_type, sample_id) %>%
  dplyr::group_by(dataset_type) %>%
  dplyr::count(name = "N") %>%
  dplyr::collect() %>%
  dplyr::ungroup()

fig_n_samples_per_dataset_type <-
  plot_waffle(
    n_samples_per_dataset_type,
    dataset_type,
    plot_title = "Number of Samples per Dataset Type",
    one_point_is = 25e3
  ) +
  ggplot2::scale_fill_manual(
    values = palette_dataset_type
  )
```

### Sample Size (`SampleSizeID`)

The size of vegetation plots can vary substantially. This detail is crucial for ecological studies where plot size can influence species diversity and abundance metrics, thus impacting follow-up analyses and interpretations. To account for this variability, information about the plot size is recorded separately for each contemporary Sample. 

```{r}
#| label: SampleSizeID variables scheme structure
#| tbl-cap: "Column names and types for table SampleSizeID."
data_comments_sample_size <-
  tibble::tribble(
    ~column_name, ~description,
    "sample_size_id", "ID of a size category (unique)",
    "sample_size", "Numeric expression of size",
    "description", "Mostly description of units in which the values are stored"
  )

get_db_table_data_types(
  con,
  "SampleSizeID"
) %>%
  dplyr::full_join(
    data_comments_sample_size,
    by = "column_name"
  ) %>%
  plot_table()
```

```{r}
#| label: SampleSizeID scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/SampleSizeID.png"
  )
)
```

```{r}
#| label: plot-size plot
plot_size_types <-
  dplyr::tbl(con, "SampleSizeID") %>%
  dplyr::distinct(description) %>%
  dplyr::collect()

if (
  nrow(plot_size_types) == 1
) {
  data_samples_plot_size <-
    dplyr::inner_join(
      dplyr::tbl(con, "Datasets"),
      dplyr::tbl(con, "DatasetTypeID"),
      by = "dataset_type_id"
    ) %>%
    dplyr::filter(
      dataset_type == "vegetation_plot"
    ) %>%
    dplyr::inner_join(
      dplyr::tbl(con, "DatasetSample"),
      by = "dataset_id"
    ) %>%
    dplyr::inner_join(
      dplyr::tbl(con, "Samples"),
      by = "sample_id"
    ) %>%
    dplyr::left_join(
      dplyr::tbl(con, "SampleSizeID"),
      by = "sample_size_id"
    ) %>%
    dplyr::select(sample_size) %>%
    dplyr::collect()

  fig_samples_plot_size <-
    data_samples_plot_size %>%
    ggplot2::ggplot(
      ggplot2::aes(
        x = sample_size,
      )
    ) +
    ggplot2::scale_x_continuous(
      trans = "log10"
    ) +
    ggplot2::scale_y_continuous(
      trans = "log10",
      breaks = scales::trans_breaks("log10", function(x) 10^x),
      labels = scales::trans_format("log10", scales::math_format(10^.x))
    ) +
    ggplot2::labs(
      title = "Vegetation plot size",
      x = paste0("plot size (", plot_size_types$description, ")"),
      y = "Number of Samples"
    ) +
    ggplot2::geom_histogram(
      fill = col_blue_light,
      col = NA,
      bins = 15
    )

  save_figure_to_render(fig_samples_plot_size)
}
```

### Sample age uncertainty (`SampleUncertainty`)

Each Sample from the `fossil_pollen_archive` `Dataset` is also associated with an uncertainty matrix generated during the re-estimation of ages using FOSSILPOL workflow. This matrix provides a range of potential ages derived from age-depth modelling, reflecting the inherent uncertainty in dating paleoecological records. 


```{r}
#| label: SampleUncertainty variables scheme structure
#| tbl-cap: "Column names and types for table SampleUncertainty."
data_comments_sample_uncertainty <-
  tibble::tribble(
    ~column_name, ~description,
    "sample_id", "ID of a Sample",
    "iteration", "ID of a iteration from age depth model. Currently, the is 1000 iteration per each Sample.",
    "age", "Potential age of a Sample"
  )

get_db_table_data_types(
  con,
  "SampleUncertainty"
) %>%
  dplyr::full_join(
    data_comments_sample_uncertainty,
    by = "column_name"
  ) %>%
  plot_table()

```

```{r}
#| label: SampleUncertainty scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/SampleUncertainty.png"
  )
)
```

We can show this on the previously selected fossil pollen archive with dataset ID: `r as.character(sel_dataset_for_example)`.

```{r}
#| label: Sample potential age - plot

dataset_age_example <-
  dplyr::tbl(con, "Datasets") %>%
  dplyr::filter(dataset_id == sel_dataset_for_example) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "DatasetSample"),
    by = "dataset_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "Samples"),
    by = "sample_id"
  ) %>%
  dplyr::distinct(sample_id, age) %>%
  dplyr::collect()

dataset_age_example_iterations <-
  dplyr::tbl(con, "Datasets") %>%
  dplyr::filter(dataset_id == sel_dataset_for_example) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "DatasetSample"),
    by = "dataset_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "Samples"),
    by = "sample_id"
  ) %>%
  dplyr::distinct(sample_id) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "SampleUncertainty"),
    by = "sample_id"
  ) %>%
  dplyr::select(
    sample_id,
    age_it = age
  ) %>%
  dplyr::collect()

fig_sample_age <-
  dplyr::left_join(
    dataset_age_example_iterations,
    dataset_age_example,
    by = "sample_id"
  ) %>%
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      y = age,
      group = as.factor(age),
      x = age_it
    )
  ) +
  ggplot2::coord_fixed() +
  ggplot2::labs(
    title = paste0(
      "Dataset ID:",
      as.character(sel_dataset_for_example)
    ),
    y = "Sample age (cal yr BP)",
    x = "Potential age of Samples (cal yr BP)"
  ) +
  ggplot2::geom_boxplot(
    col = col_blue_dark,
    fill = col_blue_light,
    outlier.shape = NA
  )

save_figure_to_render(fig_sample_age)
```

### Sample Reference

Each `Sample` in **VegVault** can have specific `References` in addition to those at the `Dataset`-level. These individual `Sample References` provide detailed provenance and citation information, ensuring that users can trace the origin and validation of each data point. Note that a single `Sample` can have several References. This level of referencing enhances the transparency and reliability of the data, especially when the dataset continues to be updated in the future. 

```{r}
#| label: SampleReference variables scheme structure
#| tbl-cap: "Column names and types for table SampleReference."
data_comments_sample_reference <-
  tibble::tribble(
    ~column_name, ~description,
    "sample_id", "ID of a Sample",
    "reference_id", "ID of a Reference"
  )
get_db_table_data_types(
  con,
  "SampleReference"
) %>%
  dplyr::full_join(
    data_comments_sample_reference,
    by = "column_name"
  ) %>%
  plot_table()
```

```{r}
#| label: SampleReference scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/SampleReference.png"
  )
)
```