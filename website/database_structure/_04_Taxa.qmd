## Taxa

```{r}
#| label: source config
#| include: FALSE
#| results: 'hide'
#| warning: FALSE
#| message: FALSE

library(here)

here::i_am("website/database_structure/_04_Taxa.qmd")

# Load configuration
source(
  here::here(
    "R/00_Config_file.R"
  )
)

source(
  here::here(
    "R/03_Visualisation/00_Config_quarto.R"
  )
)

invisible(
  lapply(
    list.files(
      path = here::here("R/Functions"),
      pattern = "*.R",
      recursive = TRUE,
      full.names = TRUE
    ),
    source
  )
)
```

### Taxa Structure Overview (`Taxa`)

The **VegVault** database records the original taxonomic names derived directly from the primary data sources, and currently, it holds over 100 thousand taxonomic names. 

```{r}
#| label: Taxa variables scheme structure
#| tbl-cap: "Column names and types for table Taxa."
data_comments_taxa <-
  tibble::tribble(
    ~column_name, ~description,
    "taxon_id", "ID of a Taxon (unique)",
    "taxon_name", "Name of a Taxon from primary source."
  )

get_db_table_data_types(
  con,
  "Taxa"
) %>%
  dplyr::full_join(
    data_comments_taxa,
    by = "column_name"
  ) %>%
  plot_table()
```

```{r}
#| label: Taxa scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/Taxa.png"
  )
)
```

### Sample-Taxa (`SampleTaxa`)

Each individual `Taxon` is linked to corresponding `Samples` through the `SampleTaxa` table, ensuring accurate and systematic association between species and their ecological data. Note that the abundance information varies across the primary data sources. Therefore, users have to be careful while processing data from various sources. 

```{r}
#| label: SampleTaxa variables scheme structure
#| tbl-cap: "Column names and types for table SampleTaxa."
data_comments_sample_taxa <-
  tibble::tribble(
    ~column_name, ~description,
    "sample_id", "ID of a Sample",
    "taxon_id", "ID of a Taxon",
    "value", "Abundance representation of a Taxon (the units may differ among primary sources, i.e. Dataset Source-Types)"
  )
get_db_table_data_types(
  con,
  "SampleTaxa"
  ) %>%
  dplyr::full_join(
    data_comments_sample_taxa,
    by = "column_name"
  ) %>%
  plot_table()
```

```{r}
#| label: SampleTaxa scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/SampleTaxa.png"
  )
)
```

```{r}
#| label: Number of taxa per data source type
n_taxa_per_source_type <-
  dplyr::inner_join(
    dplyr::tbl(con, "Datasets"),
    dplyr::tbl(con, "DatasetTypeID"),
    by = "dataset_type_id"
  ) %>%
  dplyr::filter(
    dataset_type == "vegetation_plot"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "DatasetSourceTypeID"),
    by = "data_source_type_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "DatasetSample"),
    by = "dataset_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "Samples"),
    by = "sample_id"
  ) %>%
  dplyr::inner_join(
    dplyr::tbl(con, "SampleTaxa"),
    by = "sample_id"
  ) %>%
  dplyr::distinct(dataset_source_type, taxon_id) %>%
  dplyr::group_by(dataset_source_type) %>%
  dplyr::count(name = "N") %>%
  dplyr::collect() %>%
  dplyr::ungroup()

fig_n_taxa_per_source_type <-
  n_taxa_per_source_type %>%
  dplyr::arrange(-N) %>%
  dplyr::mutate(
    dataset_source_type = factor(
      dataset_source_type,
      levels = unique(dataset_source_type)
    )
  ) %>%
  ggplot2::ggplot(
    ggplot2::aes(
      y = N,
      x = dataset_source_type
    )
  ) +
  ggplot2::scale_y_continuous(
    transform = scales::transform_log10(),
    breaks = scales::trans_breaks("log10", function(x) 10^x),
    labels = scales::trans_format("log10", scales::math_format(10^.x)),
  ) +
  ggplot2::coord_cartesian(
    ylim = c(10e3, 10e5)
  ) +
  ggplot2::labs(
    title = "Taxa per Source Type",
    x = "",
    y = "Number of taxa"
  ) +
  ggplot2::guides(
    fill = "none"
  ) +
  ggplot2::scale_fill_manual(
    values = palette_dataset_source_type
  ) +
  ggplot2::geom_segment(
    mapping = ggplot2::aes(
      x = dataset_source_type,
      xend = dataset_source_type,
      yend = 0
    ),
    color = col_blue_dark,
    position = ggplot2::position_dodge(0.5)
  ) +
  ggplot2::geom_point(
    mapping = ggplot2::aes(
      fill = dataset_source_type
    ),
    size = point_size,
    shape = 21,
    col = col_blue_dark,
    position = ggplot2::position_dodge(0.5)
  ) +
  ggplot2::geom_label(
    mapping = ggplot2::aes(
      label = scales::number(N)
    ),
    vjust = -0.5,
    size = point_size * 2,
    position = ggplot2::position_dodge(0.5)
  )

save_figure_to_render(fig_n_taxa_per_source_type)
```

### Taxon Classification (`TaxonClassification`)

Each taxonomic name undergoes an automated classification (see [Database Assembly](/website/database_assembly.qmd)) and results are stored in the `TaxonClassification` table. To classify the diverse taxa present in the **VegVault** database, the {[taxospace](https://github.com/OndrejMottl/taxospace)} R package was used. This tool automatically aligns taxa names with the [Taxonomy Backbone](https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c) from the [Global Biodiversity Information Facility](https://www.gbif.org/), providing a standardized classification framework. Specifically, we try to find the best match of the raw names of taxa using [Global Names Resolver](https://resolver.globalnames.org/). 

```{r}
#| label: TaxonClassification variables scheme structure
#| tbl-cap: "Column names and types for table TaxonClassification."
data_comments_taxon_classification <-
  tibble::tribble(
    ~column_name, ~description,
    "taxon_id", "ID of a Taxon",
    "taxon_species", "ID of a Taxon, which was assign as species level",
    "taxon_genus", "ID of a Taxon, which was assign as genus level",
    "taxon_family", "ID of a Taxon, which was assign as family level"
  )

get_db_table_data_types(
  con,
  "TaxonClassification"
) %>%
  dplyr::full_join(
    data_comments_taxon_classification,
    by = "column_name"
  ) %>%
  plot_table()
```


```{r}
#| label: TaxonClassification scheme structure
include_graphics_absolute_path(
  here::here(
    "Outputs/Figures/website/DB_scheme_visualisation/TaxonClassification.png"
  )
)
```

Taxonomic classification for some `Taxa` might be only available down to the genus or family level, while most of the data is classified to species level. Classification information, detailed up to the family level, is stored for each taxon, ensuring consistency and facilitating comparative analyses across different datasets. Currently, the **VegVault** database holds over 110 thousand taxonomic names, of which we were unable to classify only 1312 (1.2%).

```{r}
#| label: taxa classification plot
get_n_taxa_per_level <- function(sel_level) {
  dplyr::tbl(con, "TaxonClassification") %>%
    dplyr::distinct({{ sel_level }}) %>%
    dplyr::collect() %>%
    nrow() %>%
    return()
}

n_taxa_total <-
  dplyr::tbl(con, "Taxa") %>%
  dplyr::count(name = "N") %>%
  dplyr::collect() %>%
  purrr::chuck("N")

n_taxa_not_classificed <-
  dplyr::left_join(
    dplyr::tbl(con, "Taxa"),
    dplyr::tbl(con, "TaxonClassification"),
    by = "taxon_id"
  ) %>%
  dplyr::filter(
    is.na(taxon_species) &
      is.na(taxon_genus) &
      is.na(taxon_family)
  ) %>%
  dplyr::count(name = "N") %>%
  dplyr::collect() %>%
  purrr::chuck("N")

n_taxa_per_class <-
  tibble::tribble(
    ~class, ~N,
    "total taxa", n_taxa_total,
    "species", get_n_taxa_per_level(taxon_species),
    "genus", get_n_taxa_per_level(taxon_genus),
    "family", get_n_taxa_per_level(taxon_family),
    "not classified", n_taxa_not_classificed
  )

fig_n_taxa_per_class <-
  n_taxa_per_class %>%
  dplyr::mutate(
    class = factor(
      class,
      levels = n_taxa_per_class$class
    )
  ) %>%
  ggplot2::ggplot(
    ggplot2::aes(
      y = N,
      x = class
    )
  ) +
  ggplot2::labs(
    title = "Taxa classification",
    x = "",
    y = "Number of Taxa"
  ) +
  ggplot2::guides(
    fill = "none"
  ) +
  ggplot2::scale_fill_manual(
    values = c(
      "#FCFCFC",
      "#FFE6F5",
      "#FFDEC9",
      "#FFE593",
      "#D8DBE0"
    )
  ) +
  ggplot2::coord_cartesian(
    ylim = c(0, 120e3)
  ) +
  ggplot2::geom_segment(
    mapping = ggplot2::aes(
      x = class,
      xend = class,
      yend = 0
    ),
    color = col_blue_dark,
    position = ggplot2::position_dodge(0.5)
  ) +
  ggplot2::geom_point(
    mapping = ggplot2::aes(
      fill = class
    ),
    size = point_size,
    shape = 21,
    col = col_blue_dark,
    position = ggplot2::position_dodge(0.5)
  ) +
  ggplot2::geom_label(
    mapping = ggplot2::aes(
      label = scales::number(N)
    ),
    vjust = -0.5,
    size = point_size * 2,
    position = ggplot2::position_dodge(0.5)
  )

save_figure_to_render(fig_n_taxa_per_class)
```

### Taxon Reference (`TaxonReference`)

Each taxon might get a reference. Currently, this is used to track the origin of the `Taxon` name (i.e. which primary source was used first with this `Taxon`). Note that `Taxa`, generated from taxonomic classification are associated with "taxospace" reference.

```{r}
#| label: TaxonReference variables scheme structure
#| tbl-cap: "Column names and types for table TaxonReference."
data_comments_taxon_reference <-
  tibble::tribble(
    ~column_name, ~description,
    "taxon_id", "ID of a Taxon",
    "reference_id", "ID of a Reference"
  )

get_db_table_data_types(
  con,
  "TaxonReference"
) %>%
  dplyr::full_join(
    data_comments_taxon_reference,
    by = "column_name"
  ) %>%
  plot_table()
```
